<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="210.2" y="133" width="0.3" height="15.0" fill="rgb(240,185,48)" rx="2" ry="2" />
<text  x="213.20" y="143.5" ></text>
</g>
<g >
<title>runtime.memmove (37 samples, 0.92%)</title><rect x="988.0" y="261" width="10.9" height="15.0" fill="rgb(221,53,44)" rx="2" ry="2" />
<text  x="991.03" y="271.5" ></text>
</g>
<g >
<title>runtime.runOneTimer (1 samples, 0.02%)</title><rect x="71.3" y="261" width="0.3" height="15.0" fill="rgb(219,52,49)" rx="2" ry="2" />
<text  x="74.33" y="271.5" ></text>
</g>
<g >
<title>runtime.nobarrierWakeTime (1 samples, 0.02%)</title><rect x="75.2" y="293" width="0.3" height="15.0" fill="rgb(233,118,31)" rx="2" ry="2" />
<text  x="78.16" y="303.5" ></text>
</g>
<g >
<title>runtime.runqsteal (3 samples, 0.07%)</title><rect x="76.6" y="277" width="0.9" height="15.0" fill="rgb(238,78,10)" rx="2" ry="2" />
<text  x="79.64" y="287.5" ></text>
</g>
<g >
<title>runtime.injectglist (1 samples, 0.02%)</title><rect x="71.3" y="213" width="0.3" height="15.0" fill="rgb(225,100,18)" rx="2" ry="2" />
<text  x="74.33" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (1 samples, 0.02%)</title><rect x="22.7" y="245" width="0.3" height="15.0" fill="rgb(249,69,16)" rx="2" ry="2" />
<text  x="25.68" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (6 samples, 0.15%)</title><rect x="129.1" y="261" width="1.8" height="15.0" fill="rgb(253,202,49)" rx="2" ry="2" />
<text  x="132.12" y="271.5" ></text>
</g>
<g >
<title>time.isLeap (3 samples, 0.07%)</title><rect x="873.3" y="229" width="0.9" height="15.0" fill="rgb(226,147,17)" rx="2" ry="2" />
<text  x="876.33" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="199.6" y="165" width="0.3" height="15.0" fill="rgb(205,30,19)" rx="2" ry="2" />
<text  x="202.59" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (152 samples, 3.80%)</title><rect x="1135.2" y="277" width="44.8" height="15.0" fill="rgb(244,38,11)" rx="2" ry="2" />
<text  x="1138.16" y="287.5" >runt..</text>
</g>
<g >
<title>runtime.(*timeHistogram).record (1 samples, 0.02%)</title><rect x="35.9" y="293" width="0.3" height="15.0" fill="rgb(236,123,16)" rx="2" ry="2" />
<text  x="38.95" y="303.5" ></text>
</g>
<g >
<title>crypto/rand.(*reader).Read (1,666 samples, 41.63%)</title><rect x="235.6" y="229" width="491.2" height="15.0" fill="rgb(232,96,51)" rx="2" ry="2" />
<text  x="238.56" y="239.5" >crypto/rand.(*reader).Read</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="71.3" y="133" width="0.3" height="15.0" fill="rgb(213,3,48)" rx="2" ry="2" />
<text  x="74.33" y="143.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (2 samples, 0.05%)</title><rect x="66.9" y="277" width="0.6" height="15.0" fill="rgb(236,150,36)" rx="2" ry="2" />
<text  x="69.91" y="287.5" ></text>
</g>
<g >
<title>runtime.resetspinning (4 samples, 0.10%)</title><rect x="84.9" y="277" width="1.2" height="15.0" fill="rgb(209,125,13)" rx="2" ry="2" />
<text  x="87.89" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (2 samples, 0.05%)</title><rect x="86.7" y="309" width="0.6" height="15.0" fill="rgb(236,9,8)" rx="2" ry="2" />
<text  x="89.66" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (9 samples, 0.22%)</title><rect x="1059.4" y="133" width="2.6" height="15.0" fill="rgb(239,205,29)" rx="2" ry="2" />
<text  x="1062.38" y="143.5" ></text>
</g>
<g >
<title>runtime.alignUp (1 samples, 0.02%)</title><rect x="794.9" y="245" width="0.3" height="15.0" fill="rgb(238,157,20)" rx="2" ry="2" />
<text  x="797.90" y="255.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (7 samples, 0.17%)</title><rect x="43.3" y="213" width="2.1" height="15.0" fill="rgb(252,52,2)" rx="2" ry="2" />
<text  x="46.32" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.22%)</title><rect x="201.9" y="197" width="2.7" height="15.0" fill="rgb(206,192,38)" rx="2" ry="2" />
<text  x="204.95" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (2 samples, 0.05%)</title><rect x="196.1" y="69" width="0.5" height="15.0" fill="rgb(216,185,51)" rx="2" ry="2" />
<text  x="199.05" y="79.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.02%)</title><rect x="1177.9" y="133" width="0.3" height="15.0" fill="rgb(212,61,16)" rx="2" ry="2" />
<text  x="1180.91" y="143.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (2 samples, 0.05%)</title><rect x="201.9" y="149" width="0.6" height="15.0" fill="rgb(236,78,14)" rx="2" ry="2" />
<text  x="204.95" y="159.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="739.8" y="245" width="0.3" height="15.0" fill="rgb(235,182,48)" rx="2" ry="2" />
<text  x="742.76" y="255.5" ></text>
</g>
<g >
<title>runtime.stackcache_clear (1 samples, 0.02%)</title><rect x="68.4" y="277" width="0.3" height="15.0" fill="rgb(254,84,24)" rx="2" ry="2" />
<text  x="71.38" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (5 samples, 0.12%)</title><rect x="809.3" y="101" width="1.5" height="15.0" fill="rgb(249,54,45)" rx="2" ry="2" />
<text  x="812.35" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.05%)</title><rect x="24.2" y="261" width="0.5" height="15.0" fill="rgb(248,136,43)" rx="2" ry="2" />
<text  x="27.15" y="271.5" ></text>
</g>
<g >
<title>runtime.wirep (18 samples, 0.45%)</title><rect x="302.8" y="117" width="5.3" height="15.0" fill="rgb(217,148,46)" rx="2" ry="2" />
<text  x="305.79" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (17 samples, 0.42%)</title><rect x="194.6" y="165" width="5.0" height="15.0" fill="rgb(221,110,4)" rx="2" ry="2" />
<text  x="197.58" y="175.5" ></text>
</g>
<g >
<title>testing.(*B).launch (3,725 samples, 93.08%)</title><rect x="89.0" y="357" width="1098.3" height="15.0" fill="rgb(220,191,11)" rx="2" ry="2" />
<text  x="92.02" y="367.5" >testing.(*B).launch</text>
</g>
<g >
<title>runtime.scanblock (4 samples, 0.10%)</title><rect x="46.3" y="261" width="1.1" height="15.0" fill="rgb(242,193,50)" rx="2" ry="2" />
<text  x="49.27" y="271.5" ></text>
</g>
<g >
<title>time.(*Time).sec (1 samples, 0.02%)</title><rect x="837.7" y="229" width="0.2" height="15.0" fill="rgb(209,151,35)" rx="2" ry="2" />
<text  x="840.65" y="239.5" ></text>
</g>
<g >
<title>time.(*Location).get (4 samples, 0.10%)</title><rect x="841.8" y="213" width="1.2" height="15.0" fill="rgb(243,148,11)" rx="2" ry="2" />
<text  x="844.78" y="223.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.02%)</title><rect x="41.8" y="229" width="0.3" height="15.0" fill="rgb(247,133,49)" rx="2" ry="2" />
<text  x="44.84" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="172.2" y="213" width="0.3" height="15.0" fill="rgb(239,160,42)" rx="2" ry="2" />
<text  x="175.17" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot (2 samples, 0.05%)</title><rect x="1072.1" y="133" width="0.5" height="15.0" fill="rgb(223,56,44)" rx="2" ry="2" />
<text  x="1075.06" y="143.5" ></text>
</g>
<g >
<title>time.Now (162 samples, 4.05%)</title><rect x="740.1" y="277" width="47.7" height="15.0" fill="rgb(214,63,0)" rx="2" ry="2" />
<text  x="743.05" y="287.5" >time..</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="78.4" y="293" width="0.3" height="15.0" fill="rgb(240,75,30)" rx="2" ry="2" />
<text  x="81.41" y="303.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.02%)</title><rect x="204.9" y="133" width="0.3" height="15.0" fill="rgb(236,35,23)" rx="2" ry="2" />
<text  x="207.90" y="143.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (1 samples, 0.02%)</title><rect x="23.6" y="261" width="0.3" height="15.0" fill="rgb(246,85,49)" rx="2" ry="2" />
<text  x="26.56" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.02%)</title><rect x="25.6" y="293" width="0.3" height="15.0" fill="rgb(236,70,5)" rx="2" ry="2" />
<text  x="28.63" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="204.3" y="117" width="0.3" height="15.0" fill="rgb(213,61,39)" rx="2" ry="2" />
<text  x="207.31" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="210.5" y="181" width="0.3" height="15.0" fill="rgb(212,152,47)" rx="2" ry="2" />
<text  x="213.50" y="191.5" ></text>
</g>
<g >
<title>runtime.mcall (51 samples, 1.27%)</title><rect x="67.8" y="357" width="15.0" height="15.0" fill="rgb(239,119,3)" rx="2" ry="2" />
<text  x="70.79" y="367.5" ></text>
</g>
<g >
<title>runtime.preemptM (3 samples, 0.07%)</title><rect x="33.0" y="261" width="0.9" height="15.0" fill="rgb(237,224,43)" rx="2" ry="2" />
<text  x="36.00" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (4 samples, 0.10%)</title><rect x="84.9" y="261" width="1.2" height="15.0" fill="rgb(222,149,46)" rx="2" ry="2" />
<text  x="87.89" y="271.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="787.5" y="213" width="0.3" height="15.0" fill="rgb(215,52,42)" rx="2" ry="2" />
<text  x="790.53" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.02%)</title><rect x="787.5" y="229" width="0.3" height="15.0" fill="rgb(222,81,28)" rx="2" ry="2" />
<text  x="790.53" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (3 samples, 0.07%)</title><rect x="67.8" y="341" width="0.9" height="15.0" fill="rgb(223,60,34)" rx="2" ry="2" />
<text  x="70.79" y="351.5" ></text>
</g>
<g >
<title>runtime.madvise (3 samples, 0.07%)</title><rect x="10.3" y="213" width="0.9" height="15.0" fill="rgb(218,215,25)" rx="2" ry="2" />
<text  x="13.29" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="67.8" y="293" width="0.3" height="15.0" fill="rgb(230,164,46)" rx="2" ry="2" />
<text  x="70.79" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirem (4 samples, 0.10%)</title><rect x="793.7" y="245" width="1.2" height="15.0" fill="rgb(230,40,3)" rx="2" ry="2" />
<text  x="796.72" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="87.3" y="309" width="0.2" height="15.0" fill="rgb(235,93,25)" rx="2" ry="2" />
<text  x="90.25" y="319.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (668 samples, 16.69%)</title><rect x="895.7" y="293" width="197.0" height="15.0" fill="rgb(245,212,25)" rx="2" ry="2" />
<text  x="898.74" y="303.5" >runtime.concatstring2</text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="275.7" y="53" width="0.6" height="15.0" fill="rgb(245,229,22)" rx="2" ry="2" />
<text  x="278.66" y="63.5" ></text>
</g>
<g >
<title>runtime.markroot (25 samples, 0.62%)</title><rect x="40.7" y="293" width="7.3" height="15.0" fill="rgb(210,158,54)" rx="2" ry="2" />
<text  x="43.66" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="210.2" y="165" width="0.3" height="15.0" fill="rgb(217,183,32)" rx="2" ry="2" />
<text  x="213.20" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.07%)</title><rect x="1072.1" y="197" width="0.8" height="15.0" fill="rgb(215,126,53)" rx="2" ry="2" />
<text  x="1075.06" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (25 samples, 0.62%)</title><rect x="193.7" y="213" width="7.4" height="15.0" fill="rgb(251,185,6)" rx="2" ry="2" />
<text  x="196.69" y="223.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (3 samples, 0.07%)</title><rect x="201.1" y="213" width="0.8" height="15.0" fill="rgb(248,3,24)" rx="2" ry="2" />
<text  x="204.06" y="223.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.02%)</title><rect x="204.9" y="181" width="0.3" height="15.0" fill="rgb(216,32,34)" rx="2" ry="2" />
<text  x="207.90" y="191.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="69.6" y="261" width="0.3" height="15.0" fill="rgb(250,29,5)" rx="2" ry="2" />
<text  x="72.56" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (13 samples, 0.32%)</title><rect x="219.1" y="261" width="3.8" height="15.0" fill="rgb(224,100,43)" rx="2" ry="2" />
<text  x="222.05" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="201.7" y="117" width="0.2" height="15.0" fill="rgb(213,207,11)" rx="2" ry="2" />
<text  x="204.65" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.10%)</title><rect x="84.9" y="197" width="1.2" height="15.0" fill="rgb(234,168,45)" rx="2" ry="2" />
<text  x="87.89" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (7 samples, 0.17%)</title><rect x="177.5" y="229" width="2.0" height="15.0" fill="rgb(251,52,40)" rx="2" ry="2" />
<text  x="180.48" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="34.8" y="245" width="0.3" height="15.0" fill="rgb(214,87,12)" rx="2" ry="2" />
<text  x="37.77" y="255.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="23.3" y="261" width="0.3" height="15.0" fill="rgb(224,197,33)" rx="2" ry="2" />
<text  x="26.27" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (2 samples, 0.05%)</title><rect x="30.3" y="293" width="0.6" height="15.0" fill="rgb(233,194,40)" rx="2" ry="2" />
<text  x="33.34" y="303.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.02%)</title><rect x="200.2" y="165" width="0.3" height="15.0" fill="rgb(252,160,12)" rx="2" ry="2" />
<text  x="203.18" y="175.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="30.3" y="229" width="0.3" height="15.0" fill="rgb(227,214,10)" rx="2" ry="2" />
<text  x="33.34" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (4 samples, 0.10%)</title><rect x="10.0" y="309" width="1.2" height="15.0" fill="rgb(243,214,49)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="198.1" y="85" width="0.3" height="15.0" fill="rgb(250,41,50)" rx="2" ry="2" />
<text  x="201.12" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (2 samples, 0.05%)</title><rect x="811.1" y="181" width="0.6" height="15.0" fill="rgb(221,37,7)" rx="2" ry="2" />
<text  x="814.11" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (107 samples, 2.67%)</title><rect x="35.9" y="325" width="31.6" height="15.0" fill="rgb(234,1,44)" rx="2" ry="2" />
<text  x="38.95" y="335.5" >ru..</text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="204.3" y="133" width="0.3" height="15.0" fill="rgb(237,14,42)" rx="2" ry="2" />
<text  x="207.31" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="201.7" y="133" width="0.2" height="15.0" fill="rgb(232,116,53)" rx="2" ry="2" />
<text  x="204.65" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="1063.2" y="197" width="0.3" height="15.0" fill="rgb(244,185,15)" rx="2" ry="2" />
<text  x="1066.21" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="69.6" y="277" width="0.3" height="15.0" fill="rgb(253,75,1)" rx="2" ry="2" />
<text  x="72.56" y="287.5" ></text>
</g>
<g >
<title>runtime.preemptM (2 samples, 0.05%)</title><rect x="41.0" y="261" width="0.5" height="15.0" fill="rgb(223,0,49)" rx="2" ry="2" />
<text  x="43.96" y="271.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.02%)</title><rect x="1179.7" y="197" width="0.3" height="15.0" fill="rgb(211,176,19)" rx="2" ry="2" />
<text  x="1182.68" y="207.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.02%)</title><rect x="69.0" y="309" width="0.3" height="15.0" fill="rgb(208,88,39)" rx="2" ry="2" />
<text  x="71.97" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (7 samples, 0.17%)</title><rect x="61.9" y="277" width="2.1" height="15.0" fill="rgb(243,86,11)" rx="2" ry="2" />
<text  x="64.89" y="287.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.02%)</title><rect x="67.8" y="309" width="0.3" height="15.0" fill="rgb(252,47,1)" rx="2" ry="2" />
<text  x="70.79" y="319.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (3 samples, 0.07%)</title><rect x="34.8" y="309" width="0.9" height="15.0" fill="rgb(238,213,40)" rx="2" ry="2" />
<text  x="37.77" y="319.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="172.2" y="197" width="0.3" height="15.0" fill="rgb(238,188,34)" rx="2" ry="2" />
<text  x="175.17" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="172.2" y="181" width="0.3" height="15.0" fill="rgb(205,22,4)" rx="2" ry="2" />
<text  x="175.17" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (6 samples, 0.15%)</title><rect x="21.5" y="261" width="1.8" height="15.0" fill="rgb(233,135,4)" rx="2" ry="2" />
<text  x="24.50" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot (3 samples, 0.07%)</title><rect x="127.9" y="149" width="0.9" height="15.0" fill="rgb(218,15,7)" rx="2" ry="2" />
<text  x="130.94" y="159.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteRune (57 samples, 1.42%)</title><rect x="148.9" y="277" width="16.8" height="15.0" fill="rgb(208,229,12)" rx="2" ry="2" />
<text  x="151.88" y="287.5" ></text>
</g>
<g >
<title>time.Time.appendFormat (185 samples, 4.62%)</title><rect x="823.5" y="245" width="54.5" height="15.0" fill="rgb(242,203,45)" rx="2" ry="2" />
<text  x="826.50" y="255.5" >time...</text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="35.9" y="309" width="0.3" height="15.0" fill="rgb(213,221,19)" rx="2" ry="2" />
<text  x="38.95" y="319.5" ></text>
</g>
<g >
<title>runtime.addspecial (1 samples, 0.02%)</title><rect x="210.5" y="133" width="0.3" height="15.0" fill="rgb(249,170,31)" rx="2" ry="2" />
<text  x="213.50" y="143.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="128.8" y="149" width="0.3" height="15.0" fill="rgb(226,108,20)" rx="2" ry="2" />
<text  x="131.83" y="159.5" ></text>
</g>
<g >
<title>runtime.rawstring (288 samples, 7.20%)</title><rect x="998.9" y="261" width="85.0" height="15.0" fill="rgb(245,128,22)" rx="2" ry="2" />
<text  x="1001.94" y="271.5" >runtime.r..</text>
</g>
<g >
<title>runtime.(*mheap).initSpan (4 samples, 0.10%)</title><rect x="195.5" y="85" width="1.1" height="15.0" fill="rgb(239,59,36)" rx="2" ry="2" />
<text  x="198.46" y="95.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.05%)</title><rect x="82.2" y="293" width="0.6" height="15.0" fill="rgb(241,109,45)" rx="2" ry="2" />
<text  x="85.24" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.07%)</title><rect x="1072.1" y="165" width="0.8" height="15.0" fill="rgb(248,169,29)" rx="2" ry="2" />
<text  x="1075.06" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.05%)</title><rect x="64.0" y="277" width="0.5" height="15.0" fill="rgb(237,137,2)" rx="2" ry="2" />
<text  x="66.96" y="287.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="70.4" y="277" width="0.3" height="15.0" fill="rgb(250,77,17)" rx="2" ry="2" />
<text  x="73.44" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="40.7" y="261" width="0.3" height="15.0" fill="rgb(236,117,27)" rx="2" ry="2" />
<text  x="43.66" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (2 samples, 0.05%)</title><rect x="1073.5" y="149" width="0.6" height="15.0" fill="rgb(249,23,41)" rx="2" ry="2" />
<text  x="1076.53" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="32.4" y="261" width="0.3" height="15.0" fill="rgb(218,226,24)" rx="2" ry="2" />
<text  x="35.41" y="271.5" ></text>
</g>
<g >
<title>runtime.gcStart (2 samples, 0.05%)</title><rect x="1072.9" y="229" width="0.6" height="15.0" fill="rgb(234,41,22)" rx="2" ry="2" />
<text  x="1075.94" y="239.5" ></text>
</g>
<g >
<title>runtime.signalM (4 samples, 0.10%)</title><rect x="37.1" y="245" width="1.2" height="15.0" fill="rgb(210,196,24)" rx="2" ry="2" />
<text  x="40.13" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (8 samples, 0.20%)</title><rect x="15.6" y="309" width="2.4" height="15.0" fill="rgb(254,98,19)" rx="2" ry="2" />
<text  x="18.60" y="319.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (1 samples, 0.02%)</title><rect x="71.0" y="293" width="0.3" height="15.0" fill="rgb(220,163,1)" rx="2" ry="2" />
<text  x="74.03" y="303.5" ></text>
</g>
<g >
<title>gosave_systemstack_switch (1 samples, 0.02%)</title><rect x="88.4" y="341" width="0.3" height="15.0" fill="rgb(223,88,31)" rx="2" ry="2" />
<text  x="91.43" y="351.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.02%)</title><rect x="1177.9" y="117" width="0.3" height="15.0" fill="rgb(250,162,46)" rx="2" ry="2" />
<text  x="1180.91" y="127.5" ></text>
</g>
<g >
<title>runtime.encoderune (33 samples, 0.82%)</title><rect x="1107.7" y="277" width="9.8" height="15.0" fill="rgb(250,17,36)" rx="2" ry="2" />
<text  x="1110.74" y="287.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="1179.4" y="261" width="0.3" height="15.0" fill="rgb(208,125,10)" rx="2" ry="2" />
<text  x="1182.39" y="271.5" ></text>
</g>
<g >
<title>runtime.mPark (8 samples, 0.20%)</title><rect x="71.6" y="293" width="2.4" height="15.0" fill="rgb(228,12,24)" rx="2" ry="2" />
<text  x="74.62" y="303.5" ></text>
</g>
<g >
<title>time.Time.locabs (17 samples, 0.42%)</title><rect x="837.9" y="229" width="5.1" height="15.0" fill="rgb(235,220,35)" rx="2" ry="2" />
<text  x="840.95" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="83.1" y="245" width="0.3" height="15.0" fill="rgb(249,33,37)" rx="2" ry="2" />
<text  x="86.12" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="1178.5" y="165" width="0.3" height="15.0" fill="rgb(251,1,34)" rx="2" ry="2" />
<text  x="1181.50" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.02%)</title><rect x="32.1" y="229" width="0.3" height="15.0" fill="rgb(244,8,1)" rx="2" ry="2" />
<text  x="35.11" y="239.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (2 samples, 0.05%)</title><rect x="41.5" y="245" width="0.6" height="15.0" fill="rgb(246,153,54)" rx="2" ry="2" />
<text  x="44.55" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="30.3" y="213" width="0.3" height="15.0" fill="rgb(245,117,1)" rx="2" ry="2" />
<text  x="33.34" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.05%)</title><rect x="75.8" y="277" width="0.5" height="15.0" fill="rgb(250,156,48)" rx="2" ry="2" />
<text  x="78.75" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (1 samples, 0.02%)</title><rect x="1177.9" y="149" width="0.3" height="15.0" fill="rgb(212,166,46)" rx="2" ry="2" />
<text  x="1180.91" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="39.8" y="261" width="0.3" height="15.0" fill="rgb(209,206,46)" rx="2" ry="2" />
<text  x="42.78" y="271.5" ></text>
</g>
<g >
<title>github.com/superproj/superproj-examples/performance/analysis.GenShortID (2,639 samples, 65.94%)</title><rect x="100.8" y="309" width="778.1" height="15.0" fill="rgb(242,116,17)" rx="2" ry="2" />
<text  x="103.81" y="319.5" >github.com/superproj/superproj-examples/performance/analysis.GenShortID</text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="82.2" y="245" width="0.6" height="15.0" fill="rgb(229,151,52)" rx="2" ry="2" />
<text  x="85.24" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (3 samples, 0.07%)</title><rect x="33.9" y="277" width="0.9" height="15.0" fill="rgb(229,6,51)" rx="2" ry="2" />
<text  x="36.88" y="287.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (1 samples, 0.02%)</title><rect x="69.6" y="293" width="0.3" height="15.0" fill="rgb(208,30,15)" rx="2" ry="2" />
<text  x="72.56" y="303.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (2 samples, 0.05%)</title><rect x="1073.5" y="165" width="0.6" height="15.0" fill="rgb(246,224,42)" rx="2" ry="2" />
<text  x="1076.53" y="175.5" ></text>
</g>
<g >
<title>runtime.startm (4 samples, 0.10%)</title><rect x="84.9" y="245" width="1.2" height="15.0" fill="rgb(209,46,19)" rx="2" ry="2" />
<text  x="87.89" y="255.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="302.5" y="53" width="0.3" height="15.0" fill="rgb(226,39,2)" rx="2" ry="2" />
<text  x="305.49" y="63.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.05%)</title><rect x="86.1" y="277" width="0.6" height="15.0" fill="rgb(241,186,25)" rx="2" ry="2" />
<text  x="89.07" y="287.5" ></text>
</g>
<g >
<title>runtime.tgkill (3 samples, 0.07%)</title><rect x="33.0" y="229" width="0.9" height="15.0" fill="rgb(244,170,26)" rx="2" ry="2" />
<text  x="36.00" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (4 samples, 0.10%)</title><rect x="83.4" y="213" width="1.2" height="15.0" fill="rgb(212,205,5)" rx="2" ry="2" />
<text  x="86.42" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="11.8" y="325" width="0.3" height="15.0" fill="rgb(218,224,51)" rx="2" ry="2" />
<text  x="14.77" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="68.7" y="229" width="0.3" height="15.0" fill="rgb(229,104,2)" rx="2" ry="2" />
<text  x="71.68" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.07%)</title><rect x="29.5" y="261" width="0.8" height="15.0" fill="rgb(215,176,11)" rx="2" ry="2" />
<text  x="32.46" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="1063.2" y="213" width="0.3" height="15.0" fill="rgb(254,192,0)" rx="2" ry="2" />
<text  x="1066.21" y="223.5" ></text>
</g>
<g >
<title>crypto/rand.Read (9 samples, 0.22%)</title><rect x="226.4" y="261" width="2.7" height="15.0" fill="rgb(217,81,38)" rx="2" ry="2" />
<text  x="229.42" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.07%)</title><rect x="33.9" y="245" width="0.9" height="15.0" fill="rgb(210,84,20)" rx="2" ry="2" />
<text  x="36.88" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="67.8" y="277" width="0.3" height="15.0" fill="rgb(221,158,4)" rx="2" ry="2" />
<text  x="70.79" y="287.5" ></text>
</g>
<g >
<title>runtime.acquirem (23 samples, 0.57%)</title><rect x="1122.5" y="277" width="6.8" height="15.0" fill="rgb(222,143,45)" rx="2" ry="2" />
<text  x="1125.48" y="287.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (31 samples, 0.77%)</title><rect x="1063.8" y="229" width="9.1" height="15.0" fill="rgb(224,81,44)" rx="2" ry="2" />
<text  x="1066.80" y="239.5" ></text>
</g>
<g >
<title>runtime.wakeNetPoller (2 samples, 0.05%)</title><rect x="11.2" y="309" width="0.6" height="15.0" fill="rgb(227,52,53)" rx="2" ry="2" />
<text  x="14.18" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (13 samples, 0.32%)</title><rect x="15.0" y="325" width="3.8" height="15.0" fill="rgb(217,216,0)" rx="2" ry="2" />
<text  x="18.01" y="335.5" ></text>
</g>
<g >
<title>runtime.makeslice (156 samples, 3.90%)</title><rect x="172.5" y="245" width="46.0" height="15.0" fill="rgb(247,76,7)" rx="2" ry="2" />
<text  x="175.46" y="255.5" >runt..</text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (1 samples, 0.02%)</title><rect x="810.8" y="165" width="0.3" height="15.0" fill="rgb(227,98,36)" rx="2" ry="2" />
<text  x="813.82" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (2 samples, 0.05%)</title><rect x="1060.6" y="69" width="0.5" height="15.0" fill="rgb(211,164,41)" rx="2" ry="2" />
<text  x="1063.56" y="79.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (1 samples, 0.02%)</title><rect x="1074.7" y="229" width="0.3" height="15.0" fill="rgb(238,3,33)" rx="2" ry="2" />
<text  x="1077.71" y="239.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (19 samples, 0.47%)</title><rect x="40.7" y="277" width="5.6" height="15.0" fill="rgb(250,196,22)" rx="2" ry="2" />
<text  x="43.66" y="287.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (24 samples, 0.60%)</title><rect x="19.1" y="325" width="7.1" height="15.0" fill="rgb(247,142,41)" rx="2" ry="2" />
<text  x="22.14" y="335.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (2 samples, 0.05%)</title><rect x="200.5" y="181" width="0.6" height="15.0" fill="rgb(209,206,0)" rx="2" ry="2" />
<text  x="203.47" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="35.7" y="309" width="0.2" height="15.0" fill="rgb(254,26,28)" rx="2" ry="2" />
<text  x="38.65" y="319.5" ></text>
</g>
<g >
<title>runtime.tgkill (4 samples, 0.10%)</title><rect x="37.1" y="229" width="1.2" height="15.0" fill="rgb(247,57,17)" rx="2" ry="2" />
<text  x="40.13" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (22 samples, 0.55%)</title><rect x="1075.0" y="245" width="6.5" height="15.0" fill="rgb(248,3,4)" rx="2" ry="2" />
<text  x="1078.01" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirem (3 samples, 0.07%)</title><rect x="107.9" y="261" width="0.9" height="15.0" fill="rgb(221,53,52)" rx="2" ry="2" />
<text  x="110.89" y="271.5" ></text>
</g>
<g >
<title>time.Time.Format (306 samples, 7.65%)</title><rect x="787.8" y="277" width="90.2" height="15.0" fill="rgb(213,117,6)" rx="2" ry="2" />
<text  x="790.82" y="287.5" >time.Time...</text>
</g>
<g >
<title>runtime.reentersyscall (62 samples, 1.55%)</title><rect x="258.0" y="133" width="18.3" height="15.0" fill="rgb(234,18,1)" rx="2" ry="2" />
<text  x="260.97" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.07%)</title><rect x="29.5" y="213" width="0.8" height="15.0" fill="rgb(250,224,30)" rx="2" ry="2" />
<text  x="32.46" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="69.6" y="213" width="0.3" height="15.0" fill="rgb(243,112,1)" rx="2" ry="2" />
<text  x="72.56" y="223.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (7 samples, 0.17%)</title><rect x="202.5" y="181" width="2.1" height="15.0" fill="rgb(221,117,0)" rx="2" ry="2" />
<text  x="205.54" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.10%)</title><rect x="10.0" y="293" width="1.2" height="15.0" fill="rgb(227,173,23)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="1062.9" y="197" width="0.3" height="15.0" fill="rgb(221,151,39)" rx="2" ry="2" />
<text  x="1065.92" y="207.5" ></text>
</g>
<g >
<title>github.com/superproj/superproj-examples/performance/analysis.toLower (1,046 samples, 26.14%)</title><rect x="878.9" y="309" width="308.4" height="15.0" fill="rgb(249,150,44)" rx="2" ry="2" />
<text  x="881.93" y="319.5" >github.com/superproj/superproj-examples/p..</text>
</g>
<g >
<title>runtime.deductAssistCredit (4 samples, 0.10%)</title><rect x="738.6" y="229" width="1.2" height="15.0" fill="rgb(222,51,40)" rx="2" ry="2" />
<text  x="741.58" y="239.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="128.5" y="101" width="0.3" height="15.0" fill="rgb(240,49,19)" rx="2" ry="2" />
<text  x="131.53" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="68.4" y="293" width="0.3" height="15.0" fill="rgb(252,15,41)" rx="2" ry="2" />
<text  x="71.38" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (9 samples, 0.22%)</title><rect x="1059.4" y="165" width="2.6" height="15.0" fill="rgb(209,195,28)" rx="2" ry="2" />
<text  x="1062.38" y="175.5" ></text>
</g>
<g >
<title>runtime.getMCache (10 samples, 0.25%)</title><rect x="1009.8" y="245" width="3.0" height="15.0" fill="rgb(207,124,53)" rx="2" ry="2" />
<text  x="1012.85" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (6 samples, 0.15%)</title><rect x="26.2" y="325" width="1.8" height="15.0" fill="rgb(243,80,47)" rx="2" ry="2" />
<text  x="29.22" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="86.7" y="261" width="0.3" height="15.0" fill="rgb(238,49,10)" rx="2" ry="2" />
<text  x="89.66" y="271.5" ></text>
</g>
<g >
<title>time.absDate (96 samples, 2.40%)</title><rect x="843.0" y="229" width="28.3" height="15.0" fill="rgb(231,205,50)" rx="2" ry="2" />
<text  x="845.96" y="239.5" >t..</text>
</g>
<g >
<title>runtime.resetspinning (12 samples, 0.30%)</title><rect x="78.7" y="309" width="3.5" height="15.0" fill="rgb(228,183,48)" rx="2" ry="2" />
<text  x="81.70" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="204.3" y="85" width="0.3" height="15.0" fill="rgb(218,172,50)" rx="2" ry="2" />
<text  x="207.31" y="95.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="46.9" y="245" width="0.3" height="15.0" fill="rgb(244,143,10)" rx="2" ry="2" />
<text  x="49.86" y="255.5" ></text>
</g>
<g >
<title>runtime.gcStart (1 samples, 0.02%)</title><rect x="814.9" y="229" width="0.3" height="15.0" fill="rgb(249,112,25)" rx="2" ry="2" />
<text  x="817.95" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (6 samples, 0.15%)</title><rect x="36.5" y="277" width="1.8" height="15.0" fill="rgb(216,154,6)" rx="2" ry="2" />
<text  x="39.54" y="287.5" ></text>
</g>
<g >
<title>runtime.profilealloc (2 samples, 0.05%)</title><rect x="210.2" y="213" width="0.6" height="15.0" fill="rgb(215,104,40)" rx="2" ry="2" />
<text  x="213.20" y="223.5" ></text>
</g>
<g >
<title>runtime.tgkill (2 samples, 0.05%)</title><rect x="41.0" y="229" width="0.5" height="15.0" fill="rgb(252,191,0)" rx="2" ry="2" />
<text  x="43.96" y="239.5" ></text>
</g>
<g >
<title>syscall.Syscall (1,613 samples, 40.30%)</title><rect x="251.2" y="165" width="475.6" height="15.0" fill="rgb(214,110,31)" rx="2" ry="2" />
<text  x="254.19" y="175.5" >syscall.Syscall</text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="68.4" y="309" width="0.3" height="15.0" fill="rgb(237,70,1)" rx="2" ry="2" />
<text  x="71.38" y="319.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (1 samples, 0.02%)</title><rect x="1062.9" y="165" width="0.3" height="15.0" fill="rgb(226,166,40)" rx="2" ry="2" />
<text  x="1065.92" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="34.8" y="293" width="0.3" height="15.0" fill="rgb(239,92,28)" rx="2" ry="2" />
<text  x="37.77" y="303.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2 samples, 0.05%)</title><rect x="38.3" y="261" width="0.6" height="15.0" fill="rgb(216,97,34)" rx="2" ry="2" />
<text  x="41.31" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (12 samples, 0.30%)</title><rect x="194.9" y="133" width="3.5" height="15.0" fill="rgb(247,215,27)" rx="2" ry="2" />
<text  x="197.87" y="143.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.05%)</title><rect x="42.4" y="229" width="0.6" height="15.0" fill="rgb(251,212,35)" rx="2" ry="2" />
<text  x="45.43" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (3 samples, 0.07%)</title><rect x="1059.7" y="85" width="0.9" height="15.0" fill="rgb(216,47,1)" rx="2" ry="2" />
<text  x="1062.68" y="95.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="77.2" y="245" width="0.3" height="15.0" fill="rgb(246,88,4)" rx="2" ry="2" />
<text  x="80.23" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.07%)</title><rect x="1072.1" y="149" width="0.8" height="15.0" fill="rgb(227,39,4)" rx="2" ry="2" />
<text  x="1075.06" y="159.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (1 samples, 0.02%)</title><rect x="87.8" y="357" width="0.3" height="15.0" fill="rgb(218,25,15)" rx="2" ry="2" />
<text  x="90.84" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.17%)</title><rect x="28.9" y="309" width="2.0" height="15.0" fill="rgb(247,175,34)" rx="2" ry="2" />
<text  x="31.87" y="319.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (4 samples, 0.10%)</title><rect x="29.2" y="293" width="1.1" height="15.0" fill="rgb(208,120,51)" rx="2" ry="2" />
<text  x="32.17" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="812.3" y="197" width="0.3" height="15.0" fill="rgb(232,223,10)" rx="2" ry="2" />
<text  x="815.29" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="203.4" y="117" width="0.3" height="15.0" fill="rgb(248,81,44)" rx="2" ry="2" />
<text  x="206.42" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (1 samples, 0.02%)</title><rect x="87.5" y="277" width="0.3" height="15.0" fill="rgb(207,36,24)" rx="2" ry="2" />
<text  x="90.55" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="1178.8" y="245" width="0.6" height="15.0" fill="rgb(239,174,29)" rx="2" ry="2" />
<text  x="1181.80" y="255.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.02%)</title><rect x="68.7" y="325" width="0.3" height="15.0" fill="rgb(223,190,48)" rx="2" ry="2" />
<text  x="71.68" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.07%)</title><rect x="1177.9" y="229" width="0.9" height="15.0" fill="rgb(231,150,24)" rx="2" ry="2" />
<text  x="1180.91" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (8 samples, 0.20%)</title><rect x="71.6" y="261" width="2.4" height="15.0" fill="rgb(212,41,37)" rx="2" ry="2" />
<text  x="74.62" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.05%)</title><rect x="75.8" y="261" width="0.5" height="15.0" fill="rgb(249,30,18)" rx="2" ry="2" />
<text  x="78.75" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.02%)</title><rect x="308.1" y="133" width="0.3" height="15.0" fill="rgb(217,228,29)" rx="2" ry="2" />
<text  x="311.10" y="143.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="1179.7" y="165" width="0.3" height="15.0" fill="rgb(236,201,3)" rx="2" ry="2" />
<text  x="1182.68" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="1179.7" y="149" width="0.3" height="15.0" fill="rgb(239,15,23)" rx="2" ry="2" />
<text  x="1182.68" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (11 samples, 0.27%)</title><rect x="21.5" y="309" width="3.2" height="15.0" fill="rgb(225,48,13)" rx="2" ry="2" />
<text  x="24.50" y="319.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="68.7" y="309" width="0.3" height="15.0" fill="rgb(214,7,20)" rx="2" ry="2" />
<text  x="71.68" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (6 samples, 0.15%)</title><rect x="65.1" y="261" width="1.8" height="15.0" fill="rgb(220,219,47)" rx="2" ry="2" />
<text  x="68.14" y="271.5" ></text>
</g>
<g >
<title>runtime.pMask.read (1 samples, 0.02%)</title><rect x="75.5" y="293" width="0.3" height="15.0" fill="rgb(224,55,51)" rx="2" ry="2" />
<text  x="78.46" y="303.5" ></text>
</g>
<g >
<title>crypto/sha256.init.0 (1 samples, 0.02%)</title><rect x="235.3" y="213" width="0.3" height="15.0" fill="rgb(236,62,14)" rx="2" ry="2" />
<text  x="238.27" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="35.7" y="293" width="0.2" height="15.0" fill="rgb(213,109,26)" rx="2" ry="2" />
<text  x="38.65" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="71.3" y="165" width="0.3" height="15.0" fill="rgb(223,121,25)" rx="2" ry="2" />
<text  x="74.33" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.22%)</title><rect x="1059.4" y="149" width="2.6" height="15.0" fill="rgb(249,92,48)" rx="2" ry="2" />
<text  x="1062.38" y="159.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (3 samples, 0.07%)</title><rect x="809.9" y="85" width="0.9" height="15.0" fill="rgb(213,41,27)" rx="2" ry="2" />
<text  x="812.94" y="95.5" ></text>
</g>
<g >
<title>runtime.pidleget (2 samples, 0.05%)</title><rect x="1178.8" y="213" width="0.6" height="15.0" fill="rgb(206,128,46)" rx="2" ry="2" />
<text  x="1181.80" y="223.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (1 samples, 0.02%)</title><rect x="1061.1" y="85" width="0.3" height="15.0" fill="rgb(251,168,45)" rx="2" ry="2" />
<text  x="1064.15" y="95.5" ></text>
</g>
<g >
<title>runtime.preemptM (4 samples, 0.10%)</title><rect x="37.1" y="261" width="1.2" height="15.0" fill="rgb(226,36,52)" rx="2" ry="2" />
<text  x="40.13" y="271.5" ></text>
</g>
<g >
<title>runtime.setprofilebucket (1 samples, 0.02%)</title><rect x="210.5" y="149" width="0.3" height="15.0" fill="rgb(226,215,50)" rx="2" ry="2" />
<text  x="213.50" y="159.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="1179.7" y="181" width="0.3" height="15.0" fill="rgb(245,207,1)" rx="2" ry="2" />
<text  x="1182.68" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (12 samples, 0.30%)</title><rect x="809.1" y="229" width="3.5" height="15.0" fill="rgb(214,211,39)" rx="2" ry="2" />
<text  x="812.05" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="86.1" y="213" width="0.6" height="15.0" fill="rgb(225,142,25)" rx="2" ry="2" />
<text  x="89.07" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).needUpdate (1 samples, 0.02%)</title><rect x="70.1" y="293" width="0.3" height="15.0" fill="rgb(251,45,38)" rx="2" ry="2" />
<text  x="73.15" y="303.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="210.2" y="117" width="0.3" height="15.0" fill="rgb(246,76,37)" rx="2" ry="2" />
<text  x="213.20" y="127.5" ></text>
</g>
<g >
<title>runtime.updateTimerPMask (1 samples, 0.02%)</title><rect x="203.7" y="117" width="0.3" height="15.0" fill="rgb(246,135,54)" rx="2" ry="2" />
<text  x="206.72" y="127.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.02%)</title><rect x="1178.2" y="133" width="0.3" height="15.0" fill="rgb(205,140,21)" rx="2" ry="2" />
<text  x="1181.21" y="143.5" ></text>
</g>
<g >
<title>runtime.unlock2 (2 samples, 0.05%)</title><rect x="275.7" y="85" width="0.6" height="15.0" fill="rgb(206,209,37)" rx="2" ry="2" />
<text  x="278.66" y="95.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.02%)</title><rect x="195.2" y="69" width="0.3" height="15.0" fill="rgb(226,48,43)" rx="2" ry="2" />
<text  x="198.17" y="79.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (1 samples, 0.02%)</title><rect x="45.4" y="245" width="0.3" height="15.0" fill="rgb(208,211,48)" rx="2" ry="2" />
<text  x="48.38" y="255.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.05%)</title><rect x="82.2" y="277" width="0.6" height="15.0" fill="rgb(211,194,42)" rx="2" ry="2" />
<text  x="85.24" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.07%)</title><rect x="1177.9" y="245" width="0.9" height="15.0" fill="rgb(207,0,43)" rx="2" ry="2" />
<text  x="1180.91" y="255.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (4 samples, 0.10%)</title><rect x="209.0" y="213" width="1.2" height="15.0" fill="rgb(226,185,7)" rx="2" ry="2" />
<text  x="212.03" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (1 samples, 0.02%)</title><rect x="814.9" y="165" width="0.3" height="15.0" fill="rgb(248,119,20)" rx="2" ry="2" />
<text  x="817.95" y="175.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="77.5" y="293" width="0.3" height="15.0" fill="rgb(238,97,28)" rx="2" ry="2" />
<text  x="80.52" y="303.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (7 samples, 0.17%)</title><rect x="202.5" y="165" width="2.1" height="15.0" fill="rgb(209,190,46)" rx="2" ry="2" />
<text  x="205.54" y="175.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (96 samples, 2.40%)</title><rect x="103.8" y="277" width="28.3" height="15.0" fill="rgb(205,7,5)" rx="2" ry="2" />
<text  x="106.76" y="287.5" >r..</text>
</g>
<g >
<title>runtime.getMCache (16 samples, 0.40%)</title><rect x="1130.4" y="277" width="4.8" height="15.0" fill="rgb(226,96,24)" rx="2" ry="2" />
<text  x="1133.44" y="287.5" ></text>
</g>
<g >
<title>runtime.suspendG (2 samples, 0.05%)</title><rect x="45.7" y="261" width="0.6" height="15.0" fill="rgb(215,23,41)" rx="2" ry="2" />
<text  x="48.68" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (63 samples, 1.57%)</title><rect x="48.9" y="293" width="18.6" height="15.0" fill="rgb(213,213,40)" rx="2" ry="2" />
<text  x="51.92" y="303.5" ></text>
</g>
<g >
<title>runtime.newAllocBits (2 samples, 0.05%)</title><rect x="1060.6" y="85" width="0.5" height="15.0" fill="rgb(243,155,15)" rx="2" ry="2" />
<text  x="1063.56" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.07%)</title><rect x="1177.9" y="197" width="0.9" height="15.0" fill="rgb(224,82,2)" rx="2" ry="2" />
<text  x="1180.91" y="207.5" ></text>
</g>
<g >
<title>runtime.gcFlushBgCredit (1 samples, 0.02%)</title><rect x="40.1" y="293" width="0.3" height="15.0" fill="rgb(219,228,15)" rx="2" ry="2" />
<text  x="43.07" y="303.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="84.6" y="277" width="0.3" height="15.0" fill="rgb(219,75,11)" rx="2" ry="2" />
<text  x="87.60" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="84.6" y="261" width="0.3" height="15.0" fill="rgb(249,9,20)" rx="2" ry="2" />
<text  x="87.60" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (7 samples, 0.17%)</title><rect x="28.9" y="325" width="2.0" height="15.0" fill="rgb(226,212,32)" rx="2" ry="2" />
<text  x="31.87" y="335.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (2 samples, 0.05%)</title><rect x="201.9" y="181" width="0.6" height="15.0" fill="rgb(205,128,40)" rx="2" ry="2" />
<text  x="204.95" y="191.5" ></text>
</g>
<g >
<title>time.Time.AppendFormat (191 samples, 4.77%)</title><rect x="821.7" y="261" width="56.3" height="15.0" fill="rgb(229,51,20)" rx="2" ry="2" />
<text  x="824.73" y="271.5" >time...</text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (1 samples, 0.02%)</title><rect x="28.6" y="341" width="0.3" height="15.0" fill="rgb(224,128,42)" rx="2" ry="2" />
<text  x="31.58" y="351.5" ></text>
</g>
<g >
<title>runtime.futex (3 samples, 0.07%)</title><rect x="29.5" y="197" width="0.8" height="15.0" fill="rgb(238,24,45)" rx="2" ry="2" />
<text  x="32.46" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="302.5" y="69" width="0.3" height="15.0" fill="rgb(232,112,18)" rx="2" ry="2" />
<text  x="305.49" y="79.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="201.7" y="149" width="0.2" height="15.0" fill="rgb(222,154,6)" rx="2" ry="2" />
<text  x="204.65" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (4 samples, 0.10%)</title><rect x="10.0" y="261" width="1.2" height="15.0" fill="rgb(230,56,3)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.02%)</title><rect x="76.3" y="293" width="0.3" height="15.0" fill="rgb(210,186,25)" rx="2" ry="2" />
<text  x="79.34" y="303.5" ></text>
</g>
<g >
<title>runtime.netpollBreak (2 samples, 0.05%)</title><rect x="11.2" y="293" width="0.6" height="15.0" fill="rgb(213,3,10)" rx="2" ry="2" />
<text  x="14.18" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (3 samples, 0.07%)</title><rect x="1062.0" y="165" width="0.9" height="15.0" fill="rgb(227,159,25)" rx="2" ry="2" />
<text  x="1065.03" y="175.5" ></text>
</g>
<g >
<title>runtime.alignUp (2 samples, 0.05%)</title><rect x="1009.3" y="245" width="0.5" height="15.0" fill="rgb(222,157,22)" rx="2" ry="2" />
<text  x="1012.26" y="255.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="1073.8" y="133" width="0.3" height="15.0" fill="rgb(244,129,13)" rx="2" ry="2" />
<text  x="1076.83" y="143.5" ></text>
</g>
<g >
<title>time.now (9 samples, 0.22%)</title><rect x="1187.3" y="357" width="2.7" height="15.0" fill="rgb(214,131,28)" rx="2" ry="2" />
<text  x="1190.35" y="367.5" ></text>
</g>
<g >
<title>runtime.entersyscall (82 samples, 2.05%)</title><rect x="256.2" y="149" width="24.2" height="15.0" fill="rgb(219,89,34)" rx="2" ry="2" />
<text  x="259.20" y="159.5" >r..</text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.05%)</title><rect x="24.2" y="277" width="0.5" height="15.0" fill="rgb(216,14,1)" rx="2" ry="2" />
<text  x="27.15" y="287.5" ></text>
</g>
<g >
<title>time.(*Time).sec (2 samples, 0.05%)</title><rect x="878.0" y="293" width="0.6" height="15.0" fill="rgb(220,77,41)" rx="2" ry="2" />
<text  x="881.05" y="303.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.02%)</title><rect x="204.9" y="197" width="0.3" height="15.0" fill="rgb(237,215,6)" rx="2" ry="2" />
<text  x="207.90" y="207.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (2 samples, 0.05%)</title><rect x="218.5" y="261" width="0.6" height="15.0" fill="rgb(247,120,52)" rx="2" ry="2" />
<text  x="221.46" y="271.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.07%)</title><rect x="29.5" y="245" width="0.8" height="15.0" fill="rgb(208,5,21)" rx="2" ry="2" />
<text  x="32.46" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="23.9" y="277" width="0.3" height="15.0" fill="rgb(244,67,19)" rx="2" ry="2" />
<text  x="26.86" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="88.7" y="341" width="0.3" height="15.0" fill="rgb(228,13,35)" rx="2" ry="2" />
<text  x="91.73" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (12 samples, 0.30%)</title><rect x="194.9" y="149" width="3.5" height="15.0" fill="rgb(239,95,11)" rx="2" ry="2" />
<text  x="197.87" y="159.5" ></text>
</g>
<g >
<title>runtime.pidlegetSpinning (1 samples, 0.02%)</title><rect x="68.1" y="277" width="0.3" height="15.0" fill="rgb(236,120,2)" rx="2" ry="2" />
<text  x="71.09" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="77.8" y="277" width="0.3" height="15.0" fill="rgb(221,79,42)" rx="2" ry="2" />
<text  x="80.82" y="287.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="86.7" y="277" width="0.3" height="15.0" fill="rgb(252,147,0)" rx="2" ry="2" />
<text  x="89.66" y="287.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (4 samples, 0.10%)</title><rect x="1073.5" y="213" width="1.2" height="15.0" fill="rgb(216,218,14)" rx="2" ry="2" />
<text  x="1076.53" y="223.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1,419 samples, 35.46%)</title><rect x="308.4" y="149" width="418.4" height="15.0" fill="rgb(219,139,47)" rx="2" ry="2" />
<text  x="311.39" y="159.5" >syscall.RawSyscall6</text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.10%)</title><rect x="127.9" y="213" width="1.2" height="15.0" fill="rgb(238,226,8)" rx="2" ry="2" />
<text  x="130.94" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.02%)</title><rect x="68.7" y="293" width="0.3" height="15.0" fill="rgb(248,25,40)" rx="2" ry="2" />
<text  x="71.68" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="32.7" y="229" width="0.3" height="15.0" fill="rgb(235,87,3)" rx="2" ry="2" />
<text  x="35.70" y="239.5" ></text>
</g>
<g >
<title>crypto/internal/boring.Unreachable (3 samples, 0.07%)</title><rect x="234.7" y="229" width="0.9" height="15.0" fill="rgb(208,225,16)" rx="2" ry="2" />
<text  x="237.68" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).initHeapBits (4 samples, 0.10%)</title><rect x="198.4" y="149" width="1.2" height="15.0" fill="rgb(239,137,37)" rx="2" ry="2" />
<text  x="201.41" y="159.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (3 samples, 0.07%)</title><rect x="127.9" y="133" width="0.9" height="15.0" fill="rgb(243,150,23)" rx="2" ry="2" />
<text  x="130.94" y="143.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="172.2" y="165" width="0.3" height="15.0" fill="rgb(249,33,48)" rx="2" ry="2" />
<text  x="175.17" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pushBack (1 samples, 0.02%)</title><rect x="82.8" y="309" width="0.3" height="15.0" fill="rgb(237,46,19)" rx="2" ry="2" />
<text  x="85.83" y="319.5" ></text>
</g>
<g >
<title>runtime.stealWork (3 samples, 0.07%)</title><rect x="76.6" y="293" width="0.9" height="15.0" fill="rgb(238,142,44)" rx="2" ry="2" />
<text  x="79.64" y="303.5" ></text>
</g>
<g >
<title>sync/atomic.(*Uint32).CompareAndSwap (2 samples, 0.05%)</title><rect x="727.1" y="229" width="0.6" height="15.0" fill="rgb(206,110,53)" rx="2" ry="2" />
<text  x="730.08" y="239.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (1 samples, 0.02%)</title><rect x="39.5" y="261" width="0.3" height="15.0" fill="rgb(245,205,16)" rx="2" ry="2" />
<text  x="42.49" y="271.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (8 samples, 0.20%)</title><rect x="812.6" y="229" width="2.3" height="15.0" fill="rgb(249,223,42)" rx="2" ry="2" />
<text  x="815.59" y="239.5" ></text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.07%)</title><rect x="127.9" y="117" width="0.9" height="15.0" fill="rgb(213,12,26)" rx="2" ry="2" />
<text  x="130.94" y="127.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="68.7" y="277" width="0.3" height="15.0" fill="rgb(221,13,21)" rx="2" ry="2" />
<text  x="71.68" y="287.5" ></text>
</g>
<g >
<title>runtime.readgstatus (3 samples, 0.07%)</title><rect x="48.0" y="293" width="0.9" height="15.0" fill="rgb(211,172,53)" rx="2" ry="2" />
<text  x="51.04" y="303.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.02%)</title><rect x="68.1" y="309" width="0.3" height="15.0" fill="rgb(236,143,53)" rx="2" ry="2" />
<text  x="71.09" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteString (194 samples, 4.85%)</title><rect x="165.7" y="277" width="57.2" height="15.0" fill="rgb(205,135,42)" rx="2" ry="2" />
<text  x="168.68" y="287.5" >bytes...</text>
</g>
<g >
<title>runtime.save (3 samples, 0.07%)</title><rect x="273.9" y="117" width="0.9" height="15.0" fill="rgb(227,37,18)" rx="2" ry="2" />
<text  x="276.89" y="127.5" ></text>
</g>
<g >
<title>runtime.spanClass.sizeclass (1 samples, 0.02%)</title><rect x="28.0" y="325" width="0.3" height="15.0" fill="rgb(235,16,44)" rx="2" ry="2" />
<text  x="30.99" y="335.5" ></text>
</g>
<g >
<title>runtime.getMCache (3 samples, 0.07%)</title><rect x="179.5" y="229" width="0.9" height="15.0" fill="rgb(223,13,47)" rx="2" ry="2" />
<text  x="182.54" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="34.8" y="277" width="0.3" height="15.0" fill="rgb(224,66,30)" rx="2" ry="2" />
<text  x="37.77" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (2 samples, 0.05%)</title><rect x="86.7" y="293" width="0.6" height="15.0" fill="rgb(224,115,50)" rx="2" ry="2" />
<text  x="89.66" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (12 samples, 0.30%)</title><rect x="194.9" y="101" width="3.5" height="15.0" fill="rgb(213,54,35)" rx="2" ry="2" />
<text  x="197.87" y="111.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (108 samples, 2.70%)</title><rect x="789.9" y="261" width="31.8" height="15.0" fill="rgb(209,119,32)" rx="2" ry="2" />
<text  x="792.89" y="271.5" >ru..</text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="23.9" y="261" width="0.3" height="15.0" fill="rgb(232,207,46)" rx="2" ry="2" />
<text  x="26.86" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="1072.9" y="213" width="0.6" height="15.0" fill="rgb(229,23,38)" rx="2" ry="2" />
<text  x="1075.94" y="223.5" ></text>
</g>
<g >
<title>runtime.setprofilebucket (1 samples, 0.02%)</title><rect x="1074.4" y="165" width="0.3" height="15.0" fill="rgb(217,187,53)" rx="2" ry="2" />
<text  x="1077.42" y="175.5" ></text>
</g>
<g >
<title>runtime.alignUp (1 samples, 0.02%)</title><rect x="108.8" y="261" width="0.3" height="15.0" fill="rgb(205,109,12)" rx="2" ry="2" />
<text  x="111.78" y="271.5" ></text>
</g>
<g >
<title>runtime.sweepClass.split (1 samples, 0.02%)</title><rect x="28.3" y="325" width="0.3" height="15.0" fill="rgb(243,33,31)" rx="2" ry="2" />
<text  x="31.28" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (4 samples, 0.10%)</title><rect x="127.9" y="181" width="1.2" height="15.0" fill="rgb(222,166,48)" rx="2" ry="2" />
<text  x="130.94" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).reset (1 samples, 0.02%)</title><rect x="1073.2" y="165" width="0.3" height="15.0" fill="rgb(238,158,19)" rx="2" ry="2" />
<text  x="1076.24" y="175.5" ></text>
</g>
<g >
<title>runtime.newstack (17 samples, 0.42%)</title><rect x="82.8" y="341" width="5.0" height="15.0" fill="rgb(254,76,2)" rx="2" ry="2" />
<text  x="85.83" y="351.5" ></text>
</g>
<g >
<title>runtime.gcStart (9 samples, 0.22%)</title><rect x="201.9" y="213" width="2.7" height="15.0" fill="rgb(242,23,11)" rx="2" ry="2" />
<text  x="204.95" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Bool).Load (1 samples, 0.02%)</title><rect x="78.1" y="293" width="0.3" height="15.0" fill="rgb(251,167,36)" rx="2" ry="2" />
<text  x="81.11" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (12 samples, 0.30%)</title><rect x="36.5" y="293" width="3.6" height="15.0" fill="rgb(213,17,16)" rx="2" ry="2" />
<text  x="39.54" y="303.5" ></text>
</g>
<g >
<title>runtime.bgsweep (58 samples, 1.45%)</title><rect x="11.8" y="357" width="17.1" height="15.0" fill="rgb(218,147,28)" rx="2" ry="2" />
<text  x="14.77" y="367.5" ></text>
</g>
<g >
<title>runtime.gcStart (2 samples, 0.05%)</title><rect x="1178.8" y="261" width="0.6" height="15.0" fill="rgb(250,74,41)" rx="2" ry="2" />
<text  x="1181.80" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (4 samples, 0.10%)</title><rect x="127.9" y="165" width="1.2" height="15.0" fill="rgb(222,183,43)" rx="2" ry="2" />
<text  x="130.94" y="175.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (12 samples, 0.30%)</title><rect x="78.7" y="245" width="3.5" height="15.0" fill="rgb(209,88,5)" rx="2" ry="2" />
<text  x="81.70" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (12 samples, 0.30%)</title><rect x="1059.4" y="181" width="3.5" height="15.0" fill="rgb(241,156,14)" rx="2" ry="2" />
<text  x="1062.38" y="191.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc.func1 (1 samples, 0.02%)</title><rect x="210.5" y="165" width="0.3" height="15.0" fill="rgb(246,26,15)" rx="2" ry="2" />
<text  x="213.50" y="175.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.10%)</title><rect x="84.9" y="229" width="1.2" height="15.0" fill="rgb(236,17,17)" rx="2" ry="2" />
<text  x="87.89" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="11.8" y="341" width="0.3" height="15.0" fill="rgb(239,163,46)" rx="2" ry="2" />
<text  x="14.77" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (19 samples, 0.47%)</title><rect x="734.2" y="245" width="5.6" height="15.0" fill="rgb(231,130,4)" rx="2" ry="2" />
<text  x="737.16" y="255.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.02%)</title><rect x="1179.7" y="245" width="0.3" height="15.0" fill="rgb(241,75,9)" rx="2" ry="2" />
<text  x="1182.68" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="71.3" y="181" width="0.3" height="15.0" fill="rgb(208,210,17)" rx="2" ry="2" />
<text  x="74.33" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (20 samples, 0.50%)</title><rect x="194.0" y="181" width="5.9" height="15.0" fill="rgb(207,56,26)" rx="2" ry="2" />
<text  x="196.99" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1.1 (3 samples, 0.07%)</title><rect x="31.8" y="277" width="0.9" height="15.0" fill="rgb(232,75,46)" rx="2" ry="2" />
<text  x="34.82" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.05%)</title><rect x="86.1" y="261" width="0.6" height="15.0" fill="rgb(233,118,11)" rx="2" ry="2" />
<text  x="89.07" y="271.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.02%)</title><rect x="68.7" y="341" width="0.3" height="15.0" fill="rgb(209,137,11)" rx="2" ry="2" />
<text  x="71.68" y="351.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (13 samples, 0.32%)</title><rect x="1180.0" y="277" width="3.8" height="15.0" fill="rgb(211,94,10)" rx="2" ry="2" />
<text  x="1182.98" y="287.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (3 samples, 0.07%)</title><rect x="18.0" y="309" width="0.8" height="15.0" fill="rgb(216,60,19)" rx="2" ry="2" />
<text  x="20.96" y="319.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.10%)</title><rect x="84.9" y="213" width="1.2" height="15.0" fill="rgb(238,65,19)" rx="2" ry="2" />
<text  x="87.89" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="35.7" y="261" width="0.2" height="15.0" fill="rgb(232,56,44)" rx="2" ry="2" />
<text  x="38.65" y="271.5" ></text>
</g>
<g >
<title>runtime.getMCache (6 samples, 0.15%)</title><rect x="732.4" y="245" width="1.8" height="15.0" fill="rgb(252,57,36)" rx="2" ry="2" />
<text  x="735.39" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="75.8" y="245" width="0.5" height="15.0" fill="rgb(236,49,14)" rx="2" ry="2" />
<text  x="78.75" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="32.7" y="277" width="0.3" height="15.0" fill="rgb(250,195,35)" rx="2" ry="2" />
<text  x="35.70" y="287.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (2 samples, 0.05%)</title><rect x="210.2" y="197" width="0.6" height="15.0" fill="rgb(205,70,24)" rx="2" ry="2" />
<text  x="213.20" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (4 samples, 0.10%)</title><rect x="127.9" y="197" width="1.2" height="15.0" fill="rgb(225,204,52)" rx="2" ry="2" />
<text  x="130.94" y="207.5" ></text>
</g>
<g >
<title>runtime.putempty (1 samples, 0.02%)</title><rect x="32.1" y="245" width="0.3" height="15.0" fill="rgb(244,45,18)" rx="2" ry="2" />
<text  x="35.11" y="255.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.02%)</title><rect x="1178.2" y="149" width="0.3" height="15.0" fill="rgb(238,158,27)" rx="2" ry="2" />
<text  x="1181.21" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="814.9" y="213" width="0.3" height="15.0" fill="rgb(213,133,13)" rx="2" ry="2" />
<text  x="817.95" y="223.5" ></text>
</g>
<g >
<title>runtime.preemptall (3 samples, 0.07%)</title><rect x="33.0" y="277" width="0.9" height="15.0" fill="rgb(234,134,14)" rx="2" ry="2" />
<text  x="36.00" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="77.8" y="261" width="0.3" height="15.0" fill="rgb(253,219,53)" rx="2" ry="2" />
<text  x="80.82" y="271.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.05%)</title><rect x="67.8" y="325" width="0.6" height="15.0" fill="rgb(226,182,3)" rx="2" ry="2" />
<text  x="70.79" y="335.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="83.1" y="261" width="0.3" height="15.0" fill="rgb(223,156,35)" rx="2" ry="2" />
<text  x="86.12" y="271.5" ></text>
</g>
<g >
<title>runtime.write1 (2 samples, 0.05%)</title><rect x="11.2" y="261" width="0.6" height="15.0" fill="rgb(227,92,47)" rx="2" ry="2" />
<text  x="14.18" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="275.4" y="69" width="0.3" height="15.0" fill="rgb(237,201,53)" rx="2" ry="2" />
<text  x="278.37" y="79.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="302.5" y="85" width="0.3" height="15.0" fill="rgb(215,196,36)" rx="2" ry="2" />
<text  x="305.49" y="95.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (3 samples, 0.07%)</title><rect x="1062.0" y="149" width="0.9" height="15.0" fill="rgb(216,113,24)" rx="2" ry="2" />
<text  x="1065.03" y="159.5" ></text>
</g>
<g >
<title>runtime.write (2 samples, 0.05%)</title><rect x="11.2" y="277" width="0.6" height="15.0" fill="rgb(239,157,27)" rx="2" ry="2" />
<text  x="14.18" y="287.5" ></text>
</g>
<g >
<title>runtime.rawstringtmp (29 samples, 0.72%)</title><rect x="1083.9" y="261" width="8.5" height="15.0" fill="rgb(234,115,13)" rx="2" ry="2" />
<text  x="1086.85" y="271.5" ></text>
</g>
<g >
<title>runtime.pMask.clear (1 samples, 0.02%)</title><rect x="35.1" y="293" width="0.3" height="15.0" fill="rgb(242,140,5)" rx="2" ry="2" />
<text  x="38.06" y="303.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.05%)</title><rect x="82.2" y="309" width="0.6" height="15.0" fill="rgb(227,135,20)" rx="2" ry="2" />
<text  x="85.24" y="319.5" ></text>
</g>
<g >
<title>time.appendInt (6 samples, 0.15%)</title><rect x="871.3" y="229" width="1.7" height="15.0" fill="rgb(236,157,30)" rx="2" ry="2" />
<text  x="874.26" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="200.2" y="181" width="0.3" height="15.0" fill="rgb(252,121,13)" rx="2" ry="2" />
<text  x="203.18" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.05%)</title><rect x="275.7" y="69" width="0.6" height="15.0" fill="rgb(252,30,53)" rx="2" ry="2" />
<text  x="278.66" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="812.3" y="213" width="0.3" height="15.0" fill="rgb(234,103,41)" rx="2" ry="2" />
<text  x="815.29" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="78.4" y="277" width="0.3" height="15.0" fill="rgb(224,57,0)" rx="2" ry="2" />
<text  x="81.41" y="287.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.02%)</title><rect x="69.3" y="309" width="0.3" height="15.0" fill="rgb(206,119,4)" rx="2" ry="2" />
<text  x="72.27" y="319.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="815.2" y="229" width="0.3" height="15.0" fill="rgb(237,51,32)" rx="2" ry="2" />
<text  x="818.24" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBits.nextFast (1 samples, 0.02%)</title><rect x="40.4" y="293" width="0.3" height="15.0" fill="rgb(248,225,9)" rx="2" ry="2" />
<text  x="43.37" y="303.5" ></text>
</g>
<g >
<title>time.nextStdChunk (13 samples, 0.32%)</title><rect x="874.2" y="229" width="3.8" height="15.0" fill="rgb(236,95,53)" rx="2" ry="2" />
<text  x="877.21" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (7 samples, 0.17%)</title><rect x="43.3" y="229" width="2.1" height="15.0" fill="rgb(242,176,37)" rx="2" ry="2" />
<text  x="46.32" y="239.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.02%)</title><rect x="22.4" y="245" width="0.3" height="15.0" fill="rgb(214,69,47)" rx="2" ry="2" />
<text  x="25.38" y="255.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.02%)</title><rect x="1178.2" y="165" width="0.3" height="15.0" fill="rgb(250,180,36)" rx="2" ry="2" />
<text  x="1181.21" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (95 samples, 2.37%)</title><rect x="280.4" y="149" width="28.0" height="15.0" fill="rgb(221,143,0)" rx="2" ry="2" />
<text  x="283.38" y="159.5" >r..</text>
</g>
<g >
<title>runtime.pidleput (2 samples, 0.05%)</title><rect x="203.4" y="133" width="0.6" height="15.0" fill="rgb(213,29,18)" rx="2" ry="2" />
<text  x="206.42" y="143.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (41 samples, 1.02%)</title><rect x="296.0" y="133" width="12.1" height="15.0" fill="rgb(205,160,9)" rx="2" ry="2" />
<text  x="299.01" y="143.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (1 samples, 0.02%)</title><rect x="1073.2" y="197" width="0.3" height="15.0" fill="rgb(226,25,47)" rx="2" ry="2" />
<text  x="1076.24" y="207.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="47.2" y="245" width="0.2" height="15.0" fill="rgb(252,125,43)" rx="2" ry="2" />
<text  x="50.15" y="255.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (16 samples, 0.40%)</title><rect x="82.8" y="325" width="4.7" height="15.0" fill="rgb(228,226,47)" rx="2" ry="2" />
<text  x="85.83" y="335.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="204.3" y="149" width="0.3" height="15.0" fill="rgb(224,126,14)" rx="2" ry="2" />
<text  x="207.31" y="159.5" ></text>
</g>
<g >
<title>runtime.signalM (2 samples, 0.05%)</title><rect x="41.0" y="245" width="0.5" height="15.0" fill="rgb(212,98,15)" rx="2" ry="2" />
<text  x="43.96" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (3 samples, 0.07%)</title><rect x="274.8" y="101" width="0.9" height="15.0" fill="rgb(244,66,1)" rx="2" ry="2" />
<text  x="277.78" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (1 samples, 0.02%)</title><rect x="199.9" y="181" width="0.3" height="15.0" fill="rgb(254,147,19)" rx="2" ry="2" />
<text  x="202.89" y="191.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).Add (2 samples, 0.05%)</title><rect x="811.7" y="197" width="0.6" height="15.0" fill="rgb(218,64,29)" rx="2" ry="2" />
<text  x="814.70" y="207.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (3 samples, 0.07%)</title><rect x="74.3" y="261" width="0.9" height="15.0" fill="rgb(253,15,5)" rx="2" ry="2" />
<text  x="77.28" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMark (1 samples, 0.02%)</title><rect x="28.9" y="277" width="0.3" height="15.0" fill="rgb(245,1,38)" rx="2" ry="2" />
<text  x="31.87" y="287.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (27 samples, 0.67%)</title><rect x="1170.8" y="261" width="8.0" height="15.0" fill="rgb(213,26,21)" rx="2" ry="2" />
<text  x="1173.83" y="271.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).find (1 samples, 0.02%)</title><rect x="196.9" y="69" width="0.3" height="15.0" fill="rgb(207,105,8)" rx="2" ry="2" />
<text  x="199.94" y="79.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (13 samples, 0.32%)</title><rect x="816.7" y="245" width="3.8" height="15.0" fill="rgb(237,97,45)" rx="2" ry="2" />
<text  x="819.72" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (3 samples, 0.07%)</title><rect x="197.2" y="85" width="0.9" height="15.0" fill="rgb(224,147,9)" rx="2" ry="2" />
<text  x="200.23" y="95.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (4 samples, 0.10%)</title><rect x="10.0" y="325" width="1.2" height="15.0" fill="rgb(218,199,12)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func1 (1 samples, 0.02%)</title><rect x="28.9" y="293" width="0.3" height="15.0" fill="rgb(208,117,44)" rx="2" ry="2" />
<text  x="31.87" y="303.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (3 samples, 0.07%)</title><rect x="809.9" y="69" width="0.9" height="15.0" fill="rgb(233,210,25)" rx="2" ry="2" />
<text  x="812.94" y="79.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (4 samples, 0.10%)</title><rect x="10.0" y="277" width="1.2" height="15.0" fill="rgb(247,175,26)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="43.0" y="213" width="0.3" height="15.0" fill="rgb(209,21,31)" rx="2" ry="2" />
<text  x="46.02" y="223.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (3 samples, 0.07%)</title><rect x="33.9" y="293" width="0.9" height="15.0" fill="rgb(208,42,5)" rx="2" ry="2" />
<text  x="36.88" y="303.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="30.3" y="261" width="0.3" height="15.0" fill="rgb(240,127,54)" rx="2" ry="2" />
<text  x="33.34" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).dispose (2 samples, 0.05%)</title><rect x="31.8" y="261" width="0.6" height="15.0" fill="rgb(214,156,19)" rx="2" ry="2" />
<text  x="34.82" y="271.5" ></text>
</g>
<g >
<title>github.com/superproj/superproj-examples/performance/analysis.BenchmarkGenShortID (3,725 samples, 93.08%)</title><rect x="89.0" y="325" width="1098.3" height="15.0" fill="rgb(237,108,33)" rx="2" ry="2" />
<text  x="92.02" y="335.5" >github.com/superproj/superproj-examples/performance/analysis.BenchmarkGenShortID</text>
</g>
<g >
<title>runtime.sysUnused (3 samples, 0.07%)</title><rect x="10.3" y="245" width="0.9" height="15.0" fill="rgb(214,201,6)" rx="2" ry="2" />
<text  x="13.29" y="255.5" ></text>
</g>
<g >
<title>runtime.deductAssistCredit (12 samples, 0.30%)</title><rect x="125.6" y="245" width="3.5" height="15.0" fill="rgb(217,32,52)" rx="2" ry="2" />
<text  x="128.58" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="77.8" y="293" width="0.3" height="15.0" fill="rgb(234,112,4)" rx="2" ry="2" />
<text  x="80.82" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="87.5" y="309" width="0.3" height="15.0" fill="rgb(220,70,28)" rx="2" ry="2" />
<text  x="90.55" y="319.5" ></text>
</g>
<g >
<title>runtime.signalM (3 samples, 0.07%)</title><rect x="33.0" y="245" width="0.9" height="15.0" fill="rgb(246,145,42)" rx="2" ry="2" />
<text  x="36.00" y="255.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="204.9" y="149" width="0.3" height="15.0" fill="rgb(238,210,40)" rx="2" ry="2" />
<text  x="207.90" y="159.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.02%)</title><rect x="210.2" y="149" width="0.3" height="15.0" fill="rgb(221,10,52)" rx="2" ry="2" />
<text  x="213.20" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (1 samples, 0.02%)</title><rect x="204.6" y="197" width="0.3" height="15.0" fill="rgb(214,169,49)" rx="2" ry="2" />
<text  x="207.60" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (66 samples, 1.65%)</title><rect x="109.7" y="261" width="19.4" height="15.0" fill="rgb(213,90,50)" rx="2" ry="2" />
<text  x="112.66" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1 samples, 0.02%)</title><rect x="1177.9" y="165" width="0.3" height="15.0" fill="rgb(234,223,18)" rx="2" ry="2" />
<text  x="1180.91" y="175.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="68.1" y="261" width="0.3" height="15.0" fill="rgb(252,201,45)" rx="2" ry="2" />
<text  x="71.09" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint8).Load (14 samples, 0.35%)</title><rect x="276.3" y="133" width="4.1" height="15.0" fill="rgb(218,199,13)" rx="2" ry="2" />
<text  x="279.25" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (17 samples, 0.42%)</title><rect x="1058.5" y="229" width="5.0" height="15.0" fill="rgb(245,199,9)" rx="2" ry="2" />
<text  x="1061.50" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.EpollWait (4 samples, 0.10%)</title><rect x="74.0" y="277" width="1.2" height="15.0" fill="rgb(223,40,29)" rx="2" ry="2" />
<text  x="76.98" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).String (101 samples, 2.52%)</title><rect x="102.3" y="293" width="29.8" height="15.0" fill="rgb(247,44,19)" rx="2" ry="2" />
<text  x="105.29" y="303.5" >by..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (4 samples, 0.10%)</title><rect x="127.9" y="229" width="1.2" height="15.0" fill="rgb(243,1,4)" rx="2" ry="2" />
<text  x="130.94" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (103 samples, 2.57%)</title><rect x="180.4" y="229" width="30.4" height="15.0" fill="rgb(228,97,47)" rx="2" ry="2" />
<text  x="183.42" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.(*mspan).ensureSwept (1 samples, 0.02%)</title><rect x="210.5" y="117" width="0.3" height="15.0" fill="rgb(242,33,36)" rx="2" ry="2" />
<text  x="213.50" y="127.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (1 samples, 0.02%)</title><rect x="71.3" y="197" width="0.3" height="15.0" fill="rgb(240,227,13)" rx="2" ry="2" />
<text  x="74.33" y="207.5" ></text>
</g>
<g >
<title>runtime.rawstring (237 samples, 5.92%)</title><rect x="1117.5" y="293" width="69.8" height="15.0" fill="rgb(249,97,40)" rx="2" ry="2" />
<text  x="1120.47" y="303.5" >runtime..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="201.7" y="165" width="0.2" height="15.0" fill="rgb(238,95,9)" rx="2" ry="2" />
<text  x="204.65" y="175.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState.func1 (1 samples, 0.02%)</title><rect x="1072.9" y="165" width="0.3" height="15.0" fill="rgb(240,14,25)" rx="2" ry="2" />
<text  x="1075.94" y="175.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="32.7" y="245" width="0.3" height="15.0" fill="rgb(226,190,21)" rx="2" ry="2" />
<text  x="35.70" y="255.5" ></text>
</g>
<g >
<title>runtime.profilealloc (4 samples, 0.10%)</title><rect x="1073.5" y="229" width="1.2" height="15.0" fill="rgb(207,190,12)" rx="2" ry="2" />
<text  x="1076.53" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="69.9" y="293" width="0.2" height="15.0" fill="rgb(214,101,12)" rx="2" ry="2" />
<text  x="72.86" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="77.8" y="245" width="0.3" height="15.0" fill="rgb(210,209,25)" rx="2" ry="2" />
<text  x="80.82" y="255.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="43.0" y="197" width="0.3" height="15.0" fill="rgb(245,7,42)" rx="2" ry="2" />
<text  x="46.02" y="207.5" ></text>
</g>
<g >
<title>runtime.resettimer (1 samples, 0.02%)</title><rect x="69.6" y="325" width="0.3" height="15.0" fill="rgb(236,186,16)" rx="2" ry="2" />
<text  x="72.56" y="335.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).empty (1 samples, 0.02%)</title><rect x="70.7" y="293" width="0.3" height="15.0" fill="rgb(241,24,29)" rx="2" ry="2" />
<text  x="73.74" y="303.5" ></text>
</g>
<g >
<title>runtime.forEachP (10 samples, 0.25%)</title><rect x="30.9" y="293" width="3.0" height="15.0" fill="rgb(246,10,25)" rx="2" ry="2" />
<text  x="33.93" y="303.5" ></text>
</g>
<g >
<title>crypto/rand.batched.func1 (1,625 samples, 40.60%)</title><rect x="247.7" y="213" width="479.1" height="15.0" fill="rgb(221,229,34)" rx="2" ry="2" />
<text  x="250.65" y="223.5" >crypto/rand.batched.func1</text>
</g>
<g >
<title>runtime.systemstack (17 samples, 0.42%)</title><rect x="30.9" y="325" width="5.0" height="15.0" fill="rgb(226,156,31)" rx="2" ry="2" />
<text  x="33.93" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (12 samples, 0.30%)</title><rect x="194.9" y="117" width="3.5" height="15.0" fill="rgb(229,16,2)" rx="2" ry="2" />
<text  x="197.87" y="127.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="45.4" y="229" width="0.3" height="15.0" fill="rgb(242,102,10)" rx="2" ry="2" />
<text  x="48.38" y="239.5" ></text>
</g>
<g >
<title>testing.(*B).runN (3,725 samples, 93.08%)</title><rect x="89.0" y="341" width="1098.3" height="15.0" fill="rgb(253,118,34)" rx="2" ry="2" />
<text  x="92.02" y="351.5" >testing.(*B).runN</text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.05%)</title><rect x="816.1" y="245" width="0.6" height="15.0" fill="rgb(254,128,0)" rx="2" ry="2" />
<text  x="819.13" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="67.5" y="357" width="0.3" height="15.0" fill="rgb(232,80,48)" rx="2" ry="2" />
<text  x="70.50" y="367.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="61.6" y="277" width="0.3" height="15.0" fill="rgb(230,84,35)" rx="2" ry="2" />
<text  x="64.60" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="87.0" y="277" width="0.3" height="15.0" fill="rgb(216,196,11)" rx="2" ry="2" />
<text  x="89.96" y="287.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func1 (1 samples, 0.02%)</title><rect x="69.0" y="325" width="0.3" height="15.0" fill="rgb(206,201,27)" rx="2" ry="2" />
<text  x="71.97" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="30.6" y="229" width="0.3" height="15.0" fill="rgb(215,213,1)" rx="2" ry="2" />
<text  x="33.64" y="239.5" ></text>
</g>
<g >
<title>runtime.eqslice (1 samples, 0.02%)</title><rect x="1074.1" y="197" width="0.3" height="15.0" fill="rgb(226,150,52)" rx="2" ry="2" />
<text  x="1077.12" y="207.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (4 samples, 0.10%)</title><rect x="83.4" y="261" width="1.2" height="15.0" fill="rgb(212,205,32)" rx="2" ry="2" />
<text  x="86.42" y="271.5" ></text>
</g>
<g >
<title>runtime.notesleep (8 samples, 0.20%)</title><rect x="71.6" y="277" width="2.4" height="15.0" fill="rgb(241,184,31)" rx="2" ry="2" />
<text  x="74.62" y="287.5" ></text>
</g>
<g >
<title>runtime.addspecial (1 samples, 0.02%)</title><rect x="1074.4" y="149" width="0.3" height="15.0" fill="rgb(211,49,16)" rx="2" ry="2" />
<text  x="1077.42" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrain (106 samples, 2.65%)</title><rect x="36.2" y="309" width="31.3" height="15.0" fill="rgb(242,105,32)" rx="2" ry="2" />
<text  x="39.24" y="319.5" >ru..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.07%)</title><rect x="1072.1" y="181" width="0.8" height="15.0" fill="rgb(235,150,32)" rx="2" ry="2" />
<text  x="1075.06" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="39.8" y="245" width="0.3" height="15.0" fill="rgb(215,224,36)" rx="2" ry="2" />
<text  x="42.78" y="255.5" ></text>
</g>
<g >
<title>runtime.gcStart.func1 (1 samples, 0.02%)</title><rect x="814.9" y="197" width="0.3" height="15.0" fill="rgb(247,225,50)" rx="2" ry="2" />
<text  x="817.95" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.02%)</title><rect x="202.5" y="149" width="0.3" height="15.0" fill="rgb(226,2,52)" rx="2" ry="2" />
<text  x="205.54" y="159.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc.func1 (1 samples, 0.02%)</title><rect x="1074.4" y="181" width="0.3" height="15.0" fill="rgb(248,143,32)" rx="2" ry="2" />
<text  x="1077.42" y="191.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="204.3" y="101" width="0.3" height="15.0" fill="rgb(226,203,41)" rx="2" ry="2" />
<text  x="207.31" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (1 samples, 0.02%)</title><rect x="18.8" y="325" width="0.3" height="15.0" fill="rgb(240,198,49)" rx="2" ry="2" />
<text  x="21.85" y="335.5" ></text>
</g>
<g >
<title>runtime.intstring (84 samples, 2.10%)</title><rect x="1092.7" y="293" width="24.8" height="15.0" fill="rgb(224,106,17)" rx="2" ry="2" />
<text  x="1095.70" y="303.5" >r..</text>
</g>
<g >
<title>github.com/jasonsoft/go-short-id.Generate (2,530 samples, 63.22%)</title><rect x="132.1" y="293" width="745.9" height="15.0" fill="rgb(227,28,16)" rx="2" ry="2" />
<text  x="135.07" y="303.5" >github.com/jasonsoft/go-short-id.Generate</text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="203.4" y="101" width="0.3" height="15.0" fill="rgb(245,188,16)" rx="2" ry="2" />
<text  x="206.42" y="111.5" ></text>
</g>
<g >
<title>runtime.resettimer (2 samples, 0.05%)</title><rect x="11.2" y="341" width="0.6" height="15.0" fill="rgb(231,32,33)" rx="2" ry="2" />
<text  x="14.18" y="351.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1 samples, 0.02%)</title><rect x="71.3" y="293" width="0.3" height="15.0" fill="rgb(213,99,25)" rx="2" ry="2" />
<text  x="74.33" y="303.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (2 samples, 0.05%)</title><rect x="275.7" y="101" width="0.6" height="15.0" fill="rgb(252,183,40)" rx="2" ry="2" />
<text  x="278.66" y="111.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.17%)</title><rect x="71.9" y="245" width="2.1" height="15.0" fill="rgb(234,76,37)" rx="2" ry="2" />
<text  x="74.92" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (1 samples, 0.02%)</title><rect x="1061.4" y="101" width="0.3" height="15.0" fill="rgb(234,204,22)" rx="2" ry="2" />
<text  x="1064.44" y="111.5" ></text>
</g>
<g >
<title>runtime.castogscanstatus (1 samples, 0.02%)</title><rect x="45.7" y="245" width="0.3" height="15.0" fill="rgb(247,168,49)" rx="2" ry="2" />
<text  x="48.68" y="255.5" ></text>
</g>
<g >
<title>github.com/jasonsoft/go-short-id.generateRandomBytes (1,753 samples, 43.80%)</title><rect x="223.2" y="277" width="516.9" height="15.0" fill="rgb(236,82,32)" rx="2" ry="2" />
<text  x="226.18" y="287.5" >github.com/jasonsoft/go-short-id.generateRandomBytes</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="1073.5" y="181" width="0.6" height="15.0" fill="rgb(227,178,12)" rx="2" ry="2" />
<text  x="1076.53" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.02%)</title><rect x="41.8" y="213" width="0.3" height="15.0" fill="rgb(236,129,9)" rx="2" ry="2" />
<text  x="44.84" y="223.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.02%)</title><rect x="29.2" y="245" width="0.3" height="15.0" fill="rgb(222,49,51)" rx="2" ry="2" />
<text  x="32.17" y="255.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="67.8" y="261" width="0.3" height="15.0" fill="rgb(208,142,37)" rx="2" ry="2" />
<text  x="70.79" y="271.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.02%)</title><rect x="172.2" y="245" width="0.3" height="15.0" fill="rgb(222,126,15)" rx="2" ry="2" />
<text  x="175.17" y="255.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="30.6" y="245" width="0.3" height="15.0" fill="rgb(235,221,45)" rx="2" ry="2" />
<text  x="33.64" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).find1 (1 samples, 0.02%)</title><rect x="1061.4" y="85" width="0.3" height="15.0" fill="rgb(235,122,22)" rx="2" ry="2" />
<text  x="1064.44" y="95.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierSI (1 samples, 0.02%)</title><rect x="69.3" y="325" width="0.3" height="15.0" fill="rgb(222,225,54)" rx="2" ry="2" />
<text  x="72.27" y="335.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.02%)</title><rect x="204.0" y="149" width="0.3" height="15.0" fill="rgb(219,170,17)" rx="2" ry="2" />
<text  x="207.01" y="159.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="30.6" y="277" width="0.3" height="15.0" fill="rgb(249,203,52)" rx="2" ry="2" />
<text  x="33.64" y="287.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (1 samples, 0.02%)</title><rect x="787.5" y="245" width="0.3" height="15.0" fill="rgb(215,214,9)" rx="2" ry="2" />
<text  x="790.53" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1074.4" y="197" width="0.3" height="15.0" fill="rgb(234,73,39)" rx="2" ry="2" />
<text  x="1077.42" y="207.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).chunkOf (1 samples, 0.02%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(217,222,29)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="67.8" y="245" width="0.3" height="15.0" fill="rgb(247,5,2)" rx="2" ry="2" />
<text  x="70.79" y="255.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="43.0" y="229" width="0.3" height="15.0" fill="rgb(212,128,54)" rx="2" ry="2" />
<text  x="46.02" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (24 samples, 0.60%)</title><rect x="28.9" y="341" width="7.0" height="15.0" fill="rgb(211,111,21)" rx="2" ry="2" />
<text  x="31.87" y="351.5" ></text>
</g>
<g >
<title>runtime.handoff (6 samples, 0.15%)</title><rect x="38.3" y="277" width="1.8" height="15.0" fill="rgb(209,140,4)" rx="2" ry="2" />
<text  x="41.31" y="287.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (1 samples, 0.02%)</title><rect x="814.9" y="181" width="0.3" height="15.0" fill="rgb(251,14,39)" rx="2" ry="2" />
<text  x="817.95" y="191.5" ></text>
</g>
<g >
<title>time.(*Time).stripMono (1 samples, 0.02%)</title><rect x="878.6" y="293" width="0.3" height="15.0" fill="rgb(227,133,2)" rx="2" ry="2" />
<text  x="881.64" y="303.5" ></text>
</g>
<g >
<title>runtime.getMCache (2 samples, 0.05%)</title><rect x="109.1" y="261" width="0.6" height="15.0" fill="rgb(240,118,44)" rx="2" ry="2" />
<text  x="112.07" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="69.6" y="245" width="0.3" height="15.0" fill="rgb(230,212,51)" rx="2" ry="2" />
<text  x="72.56" y="255.5" ></text>
</g>
<g >
<title>runtime.limiterEventStamp.typ (2 samples, 0.05%)</title><rect x="1178.8" y="197" width="0.6" height="15.0" fill="rgb(222,140,47)" rx="2" ry="2" />
<text  x="1181.80" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (13 samples, 0.32%)</title><rect x="205.2" y="213" width="3.8" height="15.0" fill="rgb(217,186,37)" rx="2" ry="2" />
<text  x="208.19" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.02%)</title><rect x="204.9" y="165" width="0.3" height="15.0" fill="rgb(228,139,16)" rx="2" ry="2" />
<text  x="207.90" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (8 samples, 0.20%)</title><rect x="64.5" y="277" width="2.4" height="15.0" fill="rgb(223,1,15)" rx="2" ry="2" />
<text  x="67.55" y="287.5" ></text>
</g>
<g >
<title>runtime.runqgrab (3 samples, 0.07%)</title><rect x="76.6" y="261" width="0.9" height="15.0" fill="rgb(223,221,5)" rx="2" ry="2" />
<text  x="79.64" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (11 samples, 0.27%)</title><rect x="21.5" y="293" width="3.2" height="15.0" fill="rgb(225,135,42)" rx="2" ry="2" />
<text  x="24.50" y="303.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.02%)</title><rect x="21.2" y="309" width="0.3" height="15.0" fill="rgb(219,101,12)" rx="2" ry="2" />
<text  x="24.20" y="319.5" ></text>
</g>
<g >
<title>runtime.modtimer (1 samples, 0.02%)</title><rect x="69.6" y="309" width="0.3" height="15.0" fill="rgb(243,226,53)" rx="2" ry="2" />
<text  x="72.56" y="319.5" ></text>
</g>
<g >
<title>runtime.stringDataOnStack (1 samples, 0.02%)</title><rect x="1092.4" y="277" width="0.3" height="15.0" fill="rgb(208,143,33)" rx="2" ry="2" />
<text  x="1095.40" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.07%)</title><rect x="1177.9" y="213" width="0.9" height="15.0" fill="rgb(225,16,8)" rx="2" ry="2" />
<text  x="1180.91" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.05%)</title><rect x="86.1" y="229" width="0.6" height="15.0" fill="rgb(220,191,27)" rx="2" ry="2" />
<text  x="89.07" y="239.5" ></text>
</g>
<g >
<title>runtime.releasem (3 samples, 0.07%)</title><rect x="217.6" y="229" width="0.9" height="15.0" fill="rgb(233,29,2)" rx="2" ry="2" />
<text  x="220.58" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (1 samples, 0.02%)</title><rect x="1061.7" y="101" width="0.3" height="15.0" fill="rgb(250,197,12)" rx="2" ry="2" />
<text  x="1064.74" y="111.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.05%)</title><rect x="1072.1" y="101" width="0.5" height="15.0" fill="rgb(206,38,30)" rx="2" ry="2" />
<text  x="1075.06" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.02%)</title><rect x="195.2" y="85" width="0.3" height="15.0" fill="rgb(206,19,50)" rx="2" ry="2" />
<text  x="198.17" y="95.5" ></text>
</g>
<g >
<title>runtime.lock2 (3 samples, 0.07%)</title><rect x="274.8" y="85" width="0.9" height="15.0" fill="rgb(232,165,14)" rx="2" ry="2" />
<text  x="277.78" y="95.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.02%)</title><rect x="30.3" y="277" width="0.3" height="15.0" fill="rgb(207,168,33)" rx="2" ry="2" />
<text  x="33.34" y="287.5" ></text>
</g>
<g >
<title>runtime.casgstatus (39 samples, 0.97%)</title><rect x="284.5" y="133" width="11.5" height="15.0" fill="rgb(240,164,27)" rx="2" ry="2" />
<text  x="287.51" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).initSpan (6 samples, 0.15%)</title><rect x="1059.7" y="101" width="1.7" height="15.0" fill="rgb(233,47,23)" rx="2" ry="2" />
<text  x="1062.68" y="111.5" ></text>
</g>
<g >
<title>runtime.callers (2 samples, 0.05%)</title><rect x="1073.5" y="197" width="0.6" height="15.0" fill="rgb(219,106,41)" rx="2" ry="2" />
<text  x="1076.53" y="207.5" ></text>
</g>
<g >
<title>runtime.(*atomicOffAddr).Load (1 samples, 0.02%)</title><rect x="22.4" y="229" width="0.3" height="15.0" fill="rgb(238,64,21)" rx="2" ry="2" />
<text  x="25.38" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (36 samples, 0.90%)</title><rect x="263.3" y="117" width="10.6" height="15.0" fill="rgb(211,52,20)" rx="2" ry="2" />
<text  x="266.28" y="127.5" ></text>
</g>
<g >
<title>runtime.modtimer (2 samples, 0.05%)</title><rect x="11.2" y="325" width="0.6" height="15.0" fill="rgb(226,212,17)" rx="2" ry="2" />
<text  x="14.18" y="335.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (4 samples, 0.10%)</title><rect x="24.7" y="309" width="1.2" height="15.0" fill="rgb(215,115,46)" rx="2" ry="2" />
<text  x="27.74" y="319.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="68.7" y="245" width="0.3" height="15.0" fill="rgb(227,11,34)" rx="2" ry="2" />
<text  x="71.68" y="255.5" ></text>
</g>
<g >
<title>runtime.releasem (4 samples, 0.10%)</title><rect x="820.5" y="245" width="1.2" height="15.0" fill="rgb(241,153,27)" rx="2" ry="2" />
<text  x="823.55" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="46.0" y="245" width="0.3" height="15.0" fill="rgb(248,47,30)" rx="2" ry="2" />
<text  x="48.97" y="255.5" ></text>
</g>
<g >
<title>io.ReadFull (1,691 samples, 42.25%)</title><rect x="229.1" y="261" width="498.6" height="15.0" fill="rgb(249,82,18)" rx="2" ry="2" />
<text  x="232.08" y="271.5" >io.ReadFull</text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (13 samples, 0.32%)</title><rect x="30.9" y="309" width="3.9" height="15.0" fill="rgb(207,78,35)" rx="2" ry="2" />
<text  x="33.93" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (5 samples, 0.12%)</title><rect x="809.3" y="165" width="1.5" height="15.0" fill="rgb(205,86,11)" rx="2" ry="2" />
<text  x="812.35" y="175.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.02%)</title><rect x="172.2" y="229" width="0.3" height="15.0" fill="rgb(240,165,47)" rx="2" ry="2" />
<text  x="175.17" y="239.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="210.2" y="181" width="0.3" height="15.0" fill="rgb(253,0,32)" rx="2" ry="2" />
<text  x="213.20" y="191.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="302.5" y="37" width="0.3" height="15.0" fill="rgb(230,75,52)" rx="2" ry="2" />
<text  x="305.49" y="47.5" ></text>
</g>
<g >
<title>runtime.forEachG (1 samples, 0.02%)</title><rect x="1072.9" y="181" width="0.3" height="15.0" fill="rgb(251,46,49)" rx="2" ry="2" />
<text  x="1075.94" y="191.5" ></text>
</g>
<g >
<title>internal/syscall/unix.GetRandom (1,616 samples, 40.38%)</title><rect x="250.3" y="181" width="476.5" height="15.0" fill="rgb(217,141,13)" rx="2" ry="2" />
<text  x="253.30" y="191.5" >internal/syscall/unix.GetRandom</text>
</g>
<g >
<title>runtime.futexwakeup (4 samples, 0.10%)</title><rect x="83.4" y="229" width="1.2" height="15.0" fill="rgb(254,226,39)" rx="2" ry="2" />
<text  x="86.42" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (23 samples, 0.57%)</title><rect x="210.8" y="229" width="6.8" height="15.0" fill="rgb(211,114,32)" rx="2" ry="2" />
<text  x="213.79" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (5 samples, 0.12%)</title><rect x="83.1" y="277" width="1.5" height="15.0" fill="rgb(224,144,23)" rx="2" ry="2" />
<text  x="86.12" y="287.5" ></text>
</g>
<g >
<title>runtime.releasem (8 samples, 0.20%)</title><rect x="1081.5" y="245" width="2.4" height="15.0" fill="rgb(214,148,17)" rx="2" ry="2" />
<text  x="1084.49" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (12 samples, 0.30%)</title><rect x="1059.4" y="197" width="3.5" height="15.0" fill="rgb(227,141,44)" rx="2" ry="2" />
<text  x="1062.38" y="207.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="1179.7" y="229" width="0.3" height="15.0" fill="rgb(222,14,49)" rx="2" ry="2" />
<text  x="1182.68" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putFast (1 samples, 0.02%)</title><rect x="44.2" y="181" width="0.3" height="15.0" fill="rgb(207,209,31)" rx="2" ry="2" />
<text  x="47.20" y="191.5" ></text>
</g>
<g >
<title>runtime.procresize (4 samples, 0.10%)</title><rect x="202.8" y="149" width="1.2" height="15.0" fill="rgb(214,17,47)" rx="2" ry="2" />
<text  x="205.83" y="159.5" ></text>
</g>
<g >
<title>runtime.acquirem (5 samples, 0.12%)</title><rect x="730.3" y="245" width="1.5" height="15.0" fill="rgb(254,148,10)" rx="2" ry="2" />
<text  x="733.32" y="255.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func1 (1 samples, 0.02%)</title><rect x="71.3" y="245" width="0.3" height="15.0" fill="rgb(250,80,44)" rx="2" ry="2" />
<text  x="74.33" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (6 samples, 0.15%)</title><rect x="809.3" y="181" width="1.8" height="15.0" fill="rgb(217,91,39)" rx="2" ry="2" />
<text  x="812.35" y="191.5" ></text>
</g>
<g >
<title>runtime.findRunnable (28 samples, 0.70%)</title><rect x="70.1" y="309" width="8.3" height="15.0" fill="rgb(218,5,37)" rx="2" ry="2" />
<text  x="73.15" y="319.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="87.3" y="293" width="0.2" height="15.0" fill="rgb(254,32,18)" rx="2" ry="2" />
<text  x="90.25" y="303.5" ></text>
</g>
<g >
<title>time.appendInt.func1 (1 samples, 0.02%)</title><rect x="873.0" y="229" width="0.3" height="15.0" fill="rgb(208,27,43)" rx="2" ry="2" />
<text  x="876.03" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="302.5" y="117" width="0.3" height="15.0" fill="rgb(209,76,37)" rx="2" ry="2" />
<text  x="305.49" y="127.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="23.0" y="245" width="0.3" height="15.0" fill="rgb(209,86,32)" rx="2" ry="2" />
<text  x="25.97" y="255.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.02%)</title><rect x="787.5" y="261" width="0.3" height="15.0" fill="rgb(220,180,3)" rx="2" ry="2" />
<text  x="790.53" y="271.5" ></text>
</g>
<g >
<title>runtime.releasem (4 samples, 0.10%)</title><rect x="130.9" y="261" width="1.2" height="15.0" fill="rgb(236,70,14)" rx="2" ry="2" />
<text  x="133.89" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (71 samples, 1.77%)</title><rect x="795.2" y="245" width="20.9" height="15.0" fill="rgb(224,150,45)" rx="2" ry="2" />
<text  x="798.19" y="255.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (3 samples, 0.07%)</title><rect x="10.3" y="229" width="0.9" height="15.0" fill="rgb(207,221,52)" rx="2" ry="2" />
<text  x="13.29" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="34.8" y="261" width="0.3" height="15.0" fill="rgb(213,73,48)" rx="2" ry="2" />
<text  x="37.77" y="271.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (4 samples, 0.10%)</title><rect x="10.0" y="341" width="1.2" height="15.0" fill="rgb(218,79,39)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (1 samples, 0.02%)</title><rect x="1063.5" y="229" width="0.3" height="15.0" fill="rgb(244,6,40)" rx="2" ry="2" />
<text  x="1066.51" y="239.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (3 samples, 0.07%)</title><rect x="33.9" y="261" width="0.9" height="15.0" fill="rgb(237,129,33)" rx="2" ry="2" />
<text  x="36.88" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.07%)</title><rect x="1072.1" y="213" width="0.8" height="15.0" fill="rgb(248,68,17)" rx="2" ry="2" />
<text  x="1075.06" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.12%)</title><rect x="809.3" y="149" width="1.5" height="15.0" fill="rgb(248,100,53)" rx="2" ry="2" />
<text  x="812.35" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (1 samples, 0.02%)</title><rect x="78.4" y="309" width="0.3" height="15.0" fill="rgb(249,136,28)" rx="2" ry="2" />
<text  x="81.41" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (9 samples, 0.22%)</title><rect x="1059.4" y="117" width="2.6" height="15.0" fill="rgb(207,64,28)" rx="2" ry="2" />
<text  x="1062.38" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.05%)</title><rect x="44.8" y="181" width="0.6" height="15.0" fill="rgb(229,46,20)" rx="2" ry="2" />
<text  x="47.79" y="191.5" ></text>
</g>
<g >
<title>runtime.(*timeHistogram).record (7 samples, 0.17%)</title><rect x="293.9" y="117" width="2.1" height="15.0" fill="rgb(238,151,23)" rx="2" ry="2" />
<text  x="296.94" y="127.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="68.1" y="293" width="0.3" height="15.0" fill="rgb(221,44,35)" rx="2" ry="2" />
<text  x="71.09" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (28 samples, 0.70%)</title><rect x="154.8" y="261" width="8.2" height="15.0" fill="rgb(250,95,20)" rx="2" ry="2" />
<text  x="157.77" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.05%)</title><rect x="86.1" y="245" width="0.6" height="15.0" fill="rgb(211,60,23)" rx="2" ry="2" />
<text  x="89.07" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (1 samples, 0.02%)</title><rect x="67.5" y="341" width="0.3" height="15.0" fill="rgb(213,178,54)" rx="2" ry="2" />
<text  x="70.50" y="351.5" ></text>
</g>
<g >
<title>runtime.getempty (2 samples, 0.05%)</title><rect x="38.9" y="261" width="0.6" height="15.0" fill="rgb(227,8,54)" rx="2" ry="2" />
<text  x="41.90" y="271.5" ></text>
</g>
<g >
<title>runtime.scanblock (6 samples, 0.15%)</title><rect x="43.6" y="197" width="1.8" height="15.0" fill="rgb(246,91,53)" rx="2" ry="2" />
<text  x="46.61" y="207.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.02%)</title><rect x="35.4" y="293" width="0.3" height="15.0" fill="rgb(251,53,24)" rx="2" ry="2" />
<text  x="38.36" y="303.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (1 samples, 0.02%)</title><rect x="1073.2" y="181" width="0.3" height="15.0" fill="rgb(227,100,5)" rx="2" ry="2" />
<text  x="1076.24" y="191.5" ></text>
</g>
<g >
<title>runtime.gentraceback (11 samples, 0.27%)</title><rect x="42.1" y="245" width="3.3" height="15.0" fill="rgb(246,205,1)" rx="2" ry="2" />
<text  x="45.14" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="77.5" y="277" width="0.3" height="15.0" fill="rgb(235,3,33)" rx="2" ry="2" />
<text  x="80.52" y="287.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (2 samples, 0.05%)</title><rect x="75.8" y="293" width="0.5" height="15.0" fill="rgb(207,72,10)" rx="2" ry="2" />
<text  x="78.75" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 0.05%)</title><rect x="82.2" y="261" width="0.6" height="15.0" fill="rgb(240,95,24)" rx="2" ry="2" />
<text  x="85.24" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (12 samples, 0.30%)</title><rect x="78.7" y="261" width="3.5" height="15.0" fill="rgb(246,104,51)" rx="2" ry="2" />
<text  x="81.70" y="271.5" ></text>
</g>
<g >
<title>runtime.concatstrings (588 samples, 14.69%)</title><rect x="919.0" y="277" width="173.4" height="15.0" fill="rgb(246,46,42)" rx="2" ry="2" />
<text  x="922.03" y="287.5" >runtime.concatstrings</text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (1 samples, 0.02%)</title><rect x="70.4" y="293" width="0.3" height="15.0" fill="rgb(221,81,4)" rx="2" ry="2" />
<text  x="73.44" y="303.5" ></text>
</g>
<g >
<title>all (4,002 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(230,211,25)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="1179.7" y="133" width="0.3" height="15.0" fill="rgb(243,147,3)" rx="2" ry="2" />
<text  x="1182.68" y="143.5" ></text>
</g>
<g >
<title>runtime.notewakeup (4 samples, 0.10%)</title><rect x="83.4" y="245" width="1.2" height="15.0" fill="rgb(207,211,3)" rx="2" ry="2" />
<text  x="86.42" y="255.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.02%)</title><rect x="726.8" y="229" width="0.3" height="15.0" fill="rgb(243,65,13)" rx="2" ry="2" />
<text  x="729.79" y="239.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.02%)</title><rect x="88.7" y="357" width="0.3" height="15.0" fill="rgb(244,85,42)" rx="2" ry="2" />
<text  x="91.73" y="367.5" ></text>
</g>
<g >
<title>runtime.park_m (47 samples, 1.17%)</title><rect x="69.0" y="341" width="13.8" height="15.0" fill="rgb(243,1,30)" rx="2" ry="2" />
<text  x="71.97" y="351.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.02%)</title><rect x="87.5" y="293" width="0.3" height="15.0" fill="rgb(222,37,54)" rx="2" ry="2" />
<text  x="90.55" y="303.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.02%)</title><rect x="83.1" y="229" width="0.3" height="15.0" fill="rgb(235,96,2)" rx="2" ry="2" />
<text  x="86.12" y="239.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).Add (1 samples, 0.02%)</title><rect x="25.9" y="309" width="0.3" height="15.0" fill="rgb(206,71,5)" rx="2" ry="2" />
<text  x="28.92" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="44.5" y="181" width="0.3" height="15.0" fill="rgb(248,100,10)" rx="2" ry="2" />
<text  x="47.50" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 0.07%)</title><rect x="809.9" y="53" width="0.9" height="15.0" fill="rgb(231,177,22)" rx="2" ry="2" />
<text  x="812.94" y="63.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.02%)</title><rect x="69.9" y="309" width="0.2" height="15.0" fill="rgb(226,188,34)" rx="2" ry="2" />
<text  x="72.86" y="319.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.05%)</title><rect x="1178.8" y="229" width="0.6" height="15.0" fill="rgb(240,17,11)" rx="2" ry="2" />
<text  x="1181.80" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="68.7" y="261" width="0.3" height="15.0" fill="rgb(209,5,33)" rx="2" ry="2" />
<text  x="71.68" y="271.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (6 samples, 0.15%)</title><rect x="10.0" y="357" width="1.8" height="15.0" fill="rgb(209,163,6)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>crypto/rand.getRandom (1,616 samples, 40.38%)</title><rect x="250.3" y="197" width="476.5" height="15.0" fill="rgb(207,53,42)" rx="2" ry="2" />
<text  x="253.30" y="207.5" >crypto/rand.getRandom</text>
</g>
<g >
<title>runtime.preemptPark (1 samples, 0.02%)</title><rect x="87.5" y="325" width="0.3" height="15.0" fill="rgb(235,167,47)" rx="2" ry="2" />
<text  x="90.55" y="335.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (2 samples, 0.05%)</title><rect x="196.6" y="85" width="0.6" height="15.0" fill="rgb(244,123,8)" rx="2" ry="2" />
<text  x="199.64" y="95.5" ></text>
</g>
<g >
<title>runtime.writeHeapBits.flush (4 samples, 0.10%)</title><rect x="198.4" y="133" width="1.2" height="15.0" fill="rgb(250,2,8)" rx="2" ry="2" />
<text  x="201.41" y="143.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="71.3" y="149" width="0.3" height="15.0" fill="rgb(207,33,20)" rx="2" ry="2" />
<text  x="74.33" y="159.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.02%)</title><rect x="25.0" y="293" width="0.3" height="15.0" fill="rgb(208,126,50)" rx="2" ry="2" />
<text  x="28.04" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (12 samples, 0.30%)</title><rect x="83.1" y="293" width="3.6" height="15.0" fill="rgb(235,64,48)" rx="2" ry="2" />
<text  x="86.12" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (167 samples, 4.17%)</title><rect x="169.2" y="261" width="49.3" height="15.0" fill="rgb(250,77,18)" rx="2" ry="2" />
<text  x="172.22" y="271.5" >byte..</text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (1 samples, 0.02%)</title><rect x="222.9" y="277" width="0.3" height="15.0" fill="rgb(221,194,27)" rx="2" ry="2" />
<text  x="225.88" y="287.5" ></text>
</g>
<g >
<title>runtime.acquirem (17 samples, 0.42%)</title><rect x="1004.2" y="245" width="5.1" height="15.0" fill="rgb(239,8,52)" rx="2" ry="2" />
<text  x="1007.24" y="255.5" ></text>
</g>
<g >
<title>runtime.runtimer (1 samples, 0.02%)</title><rect x="71.3" y="277" width="0.3" height="15.0" fill="rgb(237,216,21)" rx="2" ry="2" />
<text  x="74.33" y="287.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (4 samples, 0.10%)</title><rect x="29.2" y="277" width="1.1" height="15.0" fill="rgb(252,14,8)" rx="2" ry="2" />
<text  x="32.17" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (15 samples, 0.37%)</title><rect x="1058.8" y="213" width="4.4" height="15.0" fill="rgb(239,212,5)" rx="2" ry="2" />
<text  x="1061.79" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (107 samples, 2.67%)</title><rect x="35.9" y="341" width="31.6" height="15.0" fill="rgb(245,217,50)" rx="2" ry="2" />
<text  x="38.95" y="351.5" >ru..</text>
</g>
<g >
<title>runtime.makeslice (42 samples, 1.05%)</title><rect x="727.7" y="261" width="12.4" height="15.0" fill="rgb(225,208,3)" rx="2" ry="2" />
<text  x="730.67" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1179.7" y="213" width="0.3" height="15.0" fill="rgb(223,125,44)" rx="2" ry="2" />
<text  x="1182.68" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (1,418 samples, 35.43%)</title><rect x="308.7" y="133" width="418.1" height="15.0" fill="rgb(247,91,50)" rx="2" ry="2" />
<text  x="311.69" y="143.5" >runtime/internal/syscall.Syscall6</text>
</g>
<g >
<title>runtime.goschedImpl (12 samples, 0.30%)</title><rect x="83.1" y="309" width="3.6" height="15.0" fill="rgb(225,127,37)" rx="2" ry="2" />
<text  x="86.12" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (5 samples, 0.12%)</title><rect x="809.3" y="133" width="1.5" height="15.0" fill="rgb(229,92,51)" rx="2" ry="2" />
<text  x="812.35" y="143.5" ></text>
</g>
<g >
<title>runtime.futexsleep (2 samples, 0.05%)</title><rect x="274.8" y="69" width="0.6" height="15.0" fill="rgb(221,72,9)" rx="2" ry="2" />
<text  x="277.78" y="79.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.07%)</title><rect x="1177.9" y="181" width="0.9" height="15.0" fill="rgb(210,163,9)" rx="2" ry="2" />
<text  x="1180.91" y="191.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (1 samples, 0.02%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(230,7,49)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="30.3" y="245" width="0.3" height="15.0" fill="rgb(238,38,34)" rx="2" ry="2" />
<text  x="33.34" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="1072.6" y="133" width="0.3" height="15.0" fill="rgb(212,174,24)" rx="2" ry="2" />
<text  x="1075.65" y="143.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_reacquired (5 samples, 0.12%)</title><rect x="301.0" y="117" width="1.5" height="15.0" fill="rgb(239,45,1)" rx="2" ry="2" />
<text  x="304.02" y="127.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="201.7" y="197" width="0.2" height="15.0" fill="rgb(236,49,26)" rx="2" ry="2" />
<text  x="204.65" y="207.5" ></text>
</g>
<g >
<title>crypto/internal/boring/sig.StandardCrypto (1 samples, 0.02%)</title><rect x="235.0" y="213" width="0.3" height="15.0" fill="rgb(229,140,24)" rx="2" ry="2" />
<text  x="237.97" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="32.7" y="261" width="0.3" height="15.0" fill="rgb(233,6,32)" rx="2" ry="2" />
<text  x="35.70" y="271.5" ></text>
</g>
<g >
<title>runtime.sweepone (56 samples, 1.40%)</title><rect x="12.1" y="341" width="16.5" height="15.0" fill="rgb(238,63,29)" rx="2" ry="2" />
<text  x="15.06" y="351.5" ></text>
</g>
<g >
<title>runtime.procresize (1 samples, 0.02%)</title><rect x="29.2" y="261" width="0.3" height="15.0" fill="rgb(215,101,32)" rx="2" ry="2" />
<text  x="32.17" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="69.6" y="229" width="0.3" height="15.0" fill="rgb(218,47,23)" rx="2" ry="2" />
<text  x="72.56" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (1 samples, 0.02%)</title><rect x="302.5" y="101" width="0.3" height="15.0" fill="rgb(220,218,9)" rx="2" ry="2" />
<text  x="305.49" y="111.5" ></text>
</g>
<g >
<title>runtime.wakep (12 samples, 0.30%)</title><rect x="78.7" y="293" width="3.5" height="15.0" fill="rgb(205,70,8)" rx="2" ry="2" />
<text  x="81.70" y="303.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="35.7" y="277" width="0.2" height="15.0" fill="rgb(253,132,3)" rx="2" ry="2" />
<text  x="38.65" y="287.5" ></text>
</g>
<g >
<title>runtime.gcResetMarkState (1 samples, 0.02%)</title><rect x="1072.9" y="197" width="0.3" height="15.0" fill="rgb(239,158,53)" rx="2" ry="2" />
<text  x="1075.94" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="68.4" y="325" width="0.3" height="15.0" fill="rgb(211,132,47)" rx="2" ry="2" />
<text  x="71.38" y="335.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (2 samples, 0.05%)</title><rect x="204.6" y="213" width="0.6" height="15.0" fill="rgb(243,88,54)" rx="2" ry="2" />
<text  x="207.60" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).init (1 samples, 0.02%)</title><rect x="809.6" y="85" width="0.3" height="15.0" fill="rgb(227,47,37)" rx="2" ry="2" />
<text  x="812.64" y="95.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (2 samples, 0.05%)</title><rect x="1072.1" y="117" width="0.5" height="15.0" fill="rgb(246,172,54)" rx="2" ry="2" />
<text  x="1075.06" y="127.5" ></text>
</g>
<g >
<title>runtime.scanstack (14 samples, 0.35%)</title><rect x="41.5" y="261" width="4.2" height="15.0" fill="rgb(208,201,44)" rx="2" ry="2" />
<text  x="44.55" y="271.5" ></text>
</g>
<g >
<title>runtime.releasem (12 samples, 0.30%)</title><rect x="1183.8" y="277" width="3.5" height="15.0" fill="rgb(214,36,18)" rx="2" ry="2" />
<text  x="1186.81" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (8 samples, 0.20%)</title><rect x="809.3" y="197" width="2.4" height="15.0" fill="rgb(209,30,52)" rx="2" ry="2" />
<text  x="812.35" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="201.7" y="181" width="0.2" height="15.0" fill="rgb(218,86,49)" rx="2" ry="2" />
<text  x="204.65" y="191.5" ></text>
</g>
<g >
<title>runtime.alignUp (4 samples, 0.10%)</title><rect x="1129.3" y="277" width="1.1" height="15.0" fill="rgb(240,71,0)" rx="2" ry="2" />
<text  x="1132.26" y="287.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.02%)</title><rect x="1062.9" y="181" width="0.3" height="15.0" fill="rgb(218,109,44)" rx="2" ry="2" />
<text  x="1065.92" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="88.1" y="357" width="0.6" height="15.0" fill="rgb(254,207,53)" rx="2" ry="2" />
<text  x="91.14" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="83.1" y="213" width="0.3" height="15.0" fill="rgb(232,5,23)" rx="2" ry="2" />
<text  x="86.12" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (5 samples, 0.12%)</title><rect x="809.3" y="117" width="1.5" height="15.0" fill="rgb(220,197,11)" rx="2" ry="2" />
<text  x="812.35" y="127.5" ></text>
</g>
<g >
<title>runtime.schedule (44 samples, 1.10%)</title><rect x="69.9" y="325" width="12.9" height="15.0" fill="rgb(225,98,0)" rx="2" ry="2" />
<text  x="72.86" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (24 samples, 0.60%)</title><rect x="194.0" y="197" width="7.1" height="15.0" fill="rgb(240,0,1)" rx="2" ry="2" />
<text  x="196.99" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (12 samples, 0.30%)</title><rect x="78.7" y="277" width="3.5" height="15.0" fill="rgb(251,20,39)" rx="2" ry="2" />
<text  x="81.70" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.02%)</title><rect x="30.6" y="261" width="0.3" height="15.0" fill="rgb(219,198,26)" rx="2" ry="2" />
<text  x="33.64" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.12%)</title><rect x="274.8" y="117" width="1.5" height="15.0" fill="rgb(245,207,44)" rx="2" ry="2" />
<text  x="277.78" y="127.5" ></text>
</g>
<g >
<title>runtime.finishsweep_m (2 samples, 0.05%)</title><rect x="201.9" y="165" width="0.6" height="15.0" fill="rgb(220,53,33)" rx="2" ry="2" />
<text  x="204.95" y="175.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.02%)</title><rect x="1179.7" y="261" width="0.3" height="15.0" fill="rgb(228,101,23)" rx="2" ry="2" />
<text  x="1182.68" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 0.05%)</title><rect x="274.8" y="53" width="0.6" height="15.0" fill="rgb(209,31,25)" rx="2" ry="2" />
<text  x="277.78" y="63.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.02%)</title><rect x="87.3" y="277" width="0.2" height="15.0" fill="rgb(236,77,50)" rx="2" ry="2" />
<text  x="90.25" y="287.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).wake (1 samples, 0.02%)</title><rect x="71.3" y="229" width="0.3" height="15.0" fill="rgb(235,193,18)" rx="2" ry="2" />
<text  x="74.33" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (17 samples, 0.42%)</title><rect x="82.8" y="357" width="5.0" height="15.0" fill="rgb(252,206,1)" rx="2" ry="2" />
<text  x="85.83" y="367.5" ></text>
</g>
<g >
<title>runtime.netpoll (4 samples, 0.10%)</title><rect x="74.0" y="293" width="1.2" height="15.0" fill="rgb(236,178,5)" rx="2" ry="2" />
<text  x="76.98" y="303.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (2 samples, 0.05%)</title><rect x="815.5" y="229" width="0.6" height="15.0" fill="rgb(210,15,51)" rx="2" ry="2" />
<text  x="818.54" y="239.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (131 samples, 3.27%)</title><rect x="28.9" y="357" width="38.6" height="15.0" fill="rgb(205,58,27)" rx="2" ry="2" />
<text  x="31.87" y="367.5" >run..</text>
</g>
<g >
<title>runtime.alignUp (2 samples, 0.05%)</title><rect x="731.8" y="245" width="0.6" height="15.0" fill="rgb(213,98,4)" rx="2" ry="2" />
<text  x="734.80" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSetBlockAlloc).alloc (1 samples, 0.02%)</title><rect x="25.3" y="293" width="0.3" height="15.0" fill="rgb(252,44,42)" rx="2" ry="2" />
<text  x="28.33" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (9 samples, 0.22%)</title><rect x="163.0" y="261" width="2.7" height="15.0" fill="rgb(243,95,47)" rx="2" ry="2" />
<text  x="166.03" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (12 samples, 0.30%)</title><rect x="78.7" y="229" width="3.5" height="15.0" fill="rgb(232,3,50)" rx="2" ry="2" />
<text  x="81.70" y="239.5" ></text>
</g>
<g >
<title>runtime.markrootSpans (2 samples, 0.05%)</title><rect x="47.4" y="277" width="0.6" height="15.0" fill="rgb(217,129,30)" rx="2" ry="2" />
<text  x="50.45" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (8 samples, 0.20%)</title><rect x="21.5" y="277" width="2.4" height="15.0" fill="rgb(228,4,54)" rx="2" ry="2" />
<text  x="24.50" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (10 samples, 0.25%)</title><rect x="809.3" y="213" width="3.0" height="15.0" fill="rgb(252,45,1)" rx="2" ry="2" />
<text  x="812.35" y="223.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (4 samples, 0.10%)</title><rect x="46.3" y="277" width="1.1" height="15.0" fill="rgb(218,175,44)" rx="2" ry="2" />
<text  x="49.27" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (211 samples, 5.27%)</title><rect x="1012.8" y="245" width="62.2" height="15.0" fill="rgb(215,83,51)" rx="2" ry="2" />
<text  x="1015.79" y="255.5" >runtim..</text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.07%)</title><rect x="29.5" y="229" width="0.8" height="15.0" fill="rgb(234,160,43)" rx="2" ry="2" />
<text  x="32.46" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.02%)</title><rect x="87.3" y="261" width="0.2" height="15.0" fill="rgb(227,109,2)" rx="2" ry="2" />
<text  x="90.25" y="271.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1,688 samples, 42.18%)</title><rect x="230.0" y="245" width="497.7" height="15.0" fill="rgb(215,146,44)" rx="2" ry="2" />
<text  x="232.96" y="255.5" >io.ReadAtLeast</text>
</g>
</g>
</svg>
